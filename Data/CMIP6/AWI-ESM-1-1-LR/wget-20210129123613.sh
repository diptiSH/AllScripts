#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-data.dkrz.de - 2021/01/29 12:36:13
# Search URL: https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.CFday.cl.gn.v20200212|esgf3.dkrz.de
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.CFday.cl.gn.v20200212|esgf3.dkrz.de'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18500101-18501231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18500101-18501231.nc' 'SHA256' '691e5ee24d39eaa8107cb7419f04cb591b43dbf6befbeb322b302856db826a6b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18510101-18511231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18510101-18511231.nc' 'SHA256' 'ea6fe32c90c8a570b2494eae167f5e89362bbf3b5777011a769805d92a2ecdd1'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18520101-18521231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18520101-18521231.nc' 'SHA256' '70017163e87032c78bc497240691418e7bd0163eb4d86f46b16b9099ff78cb27'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18530101-18531231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18530101-18531231.nc' 'SHA256' 'bbf24fb37bff825c3903beb0435c1155a57b690539888bbdb18b54ffbfa03927'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18540101-18541231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18540101-18541231.nc' 'SHA256' 'bb8d91f5ab85a9ac8934f4aacabbc9f2b66e8ea1f8697a5ff064363c070f7f95'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18550101-18551231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18550101-18551231.nc' 'SHA256' 'f6f1c6a1d15f3b25b06c0511a0bfdfc2d827115b485bbf8f8e3f896cd5780bf5'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18560101-18561231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18560101-18561231.nc' 'SHA256' '6b09d0a9823db41162cfe233d30a503b66af306dfa86bba50f56d53cadbf3f2e'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18570101-18571231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18570101-18571231.nc' 'SHA256' '47993e148bcd0cac3b494dab3e743f056464b179ed5467388435021b0d769d79'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18580101-18581231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18580101-18581231.nc' 'SHA256' 'd1bdc54dab5dc5011254884ddfbceec941ff9cc1d219ce019d44c6770822d4ff'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18590101-18591231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18590101-18591231.nc' 'SHA256' '13fc57f4a03f857607ed0501360876be586d3a76f7b34e9b03162dd7beac0564'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18600101-18601231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18600101-18601231.nc' 'SHA256' 'f9b7fe8a7ffe34d01ed657ed4d5c02e0e22e8aac6521f135a00685e5c29ba01d'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18610101-18611231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18610101-18611231.nc' 'SHA256' '4461f6d567b5b41e3e065fdbbb8875617dbf5b8888153a3d81edaec750d4f7f2'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18620101-18621231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18620101-18621231.nc' 'SHA256' 'd10e8486e10d8ea4c6242859f7aaac13dedb3d90eb6b2f88da4318136ece1cdc'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18630101-18631231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18630101-18631231.nc' 'SHA256' '94375c6834a607f5b8e11e5b75dab283af68a0cda06f1862d00069cf78a14a37'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18640101-18641231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18640101-18641231.nc' 'SHA256' 'd1014597b7a7f9ec822f9d0c3bf3c1ab23a163318cb44c4606a505150f39f489'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18650101-18651231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18650101-18651231.nc' 'SHA256' '73ce42fc4a3a3676e350842a4dfdebb65423002f69cfa7c0b569a827694f0f06'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18660101-18661231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18660101-18661231.nc' 'SHA256' 'ea4a7fb6b4c1fd3f81cf9f6845c71d256e38b68f92ce600e0fced32051f547f7'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18670101-18671231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18670101-18671231.nc' 'SHA256' 'a05437eb3fba5b79d7330c06bf25f1ad5057208638cc5c2c7c4b773d866abeff'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18680101-18681231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18680101-18681231.nc' 'SHA256' '4b6d005399af2daad10fc234413f3aa94a7cb1215711b706a22b66ef4924912b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18690101-18691231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18690101-18691231.nc' 'SHA256' '93272142ecd35b2622a9a1df746b05585438f17fc5c56d8e8cbd2529b32fe08f'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18700101-18701231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18700101-18701231.nc' 'SHA256' 'beed02278334d86341c8be83792f72dfaaaaeea5415e2bb800918dd87477b969'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18710101-18711231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18710101-18711231.nc' 'SHA256' '645591e0c0514268fc322da00310dbd79826968ed7d26243548b8110fbbc3f7b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18720101-18721231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18720101-18721231.nc' 'SHA256' '076c75516d339fcd2585ea853c3df75f95887de49e948c9149041631627a9bcd'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18730101-18731231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18730101-18731231.nc' 'SHA256' '706ea368b68a6eb25943055b14af1aeccf9730425e171f0dfcdc5e4ec674a488'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18740101-18741231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18740101-18741231.nc' 'SHA256' '484776ac390507b7ba10881e0de9f20370e34641c6ece7120fa64a08ba1991a7'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18750101-18751231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18750101-18751231.nc' 'SHA256' 'f3ff71993f2d69d9c76ababf35e55e7c9fc1e03d9d04efaaea14f8ed7473c7ee'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18760101-18761231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18760101-18761231.nc' 'SHA256' '3e18abc05cdad41864c0d8e69caf481a04d001447fd0b66b306e16baac8beaa3'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18770101-18771231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18770101-18771231.nc' 'SHA256' '21729270619a52c6f26d335ed068cd7b705ec530d85bd6d7585506b4a0f1a3be'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18780101-18781231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18780101-18781231.nc' 'SHA256' '61d465345da88204f023ec3f18cfb120df797fb93871497a057d7d341a7cd4e5'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18790101-18791231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18790101-18791231.nc' 'SHA256' '9320248ef2d4e2c81b511d4243475e511c79ab04ce40e16c5fbfc991fe9a30ce'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18800101-18801231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18800101-18801231.nc' 'SHA256' 'ccb136c2d72d27333b616b9431d6c7e994234ced3f33cb2c4b06fadc9c48c74b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18810101-18811231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18810101-18811231.nc' 'SHA256' 'f16508b2aad338e366df772e34f73fb0bcc7e52202e24053b249e292928d342a'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18820101-18821231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18820101-18821231.nc' 'SHA256' '6d3706daab1437fd86e0dc22f3c1aa1044d7662a95c1b517efc2a945b9becde1'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18830101-18831231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18830101-18831231.nc' 'SHA256' 'de6907cccb3c531f4d593748075b0c6aa01def1eecbe62623f99aaa9f33125dc'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18840101-18841231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18840101-18841231.nc' 'SHA256' 'ba5c0d5b47ebf452742787bbca3dab0864a6968f54a231ec15920ec038e3ffa7'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18850101-18851231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18850101-18851231.nc' 'SHA256' '91a7d72228b77d9c80a3fc49dc40948bd133395bbd647619d4d8921a8f5ffb83'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18860101-18861231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18860101-18861231.nc' 'SHA256' '4b79f1ccf5a84491d33167a708b67633c0fd9dbb928c04ab0c5e53428ebed396'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18870101-18871231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18870101-18871231.nc' 'SHA256' 'd5669c2dcbb050bde698a5b264f7b345708e3cd11b9761222be029db58a24a7c'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18880101-18881231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18880101-18881231.nc' 'SHA256' 'd0adb266a048da100d49befdf2e5c202a90a4ab164a9dc64b13af934ba66947e'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18890101-18891231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18890101-18891231.nc' 'SHA256' '0659a3e7b77a1ce0aa9b2c8153919442d959f0185d719b8034cffda27284d96b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18900101-18901231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18900101-18901231.nc' 'SHA256' '6cb5ad011e71615c02f82944d512667dbb4a5b10020c39333cba77be87a2ad22'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18910101-18911231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18910101-18911231.nc' 'SHA256' '965e3f703953a22256dd04d79a9c9581eee9847e7d130fc9680cbb8934d25924'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18920101-18921231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18920101-18921231.nc' 'SHA256' '9a510368c71ed8556f178f589c9c1c0d931134746d703963286fec4a61f7fd15'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18930101-18931231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18930101-18931231.nc' 'SHA256' 'd6bcc1b633a1696b2cee35ff33e7e831b7cb0a1229e93dece6f86bcf888e283a'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18940101-18941231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18940101-18941231.nc' 'SHA256' 'b2d83f45e1249c8eabf25202801930ae9090555fab557e0e0d54d547c93be29e'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18950101-18951231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18950101-18951231.nc' 'SHA256' '70bd9ec2fbcaa974ab7c9f18f1985fa9744fe8c16382e4d34d5528beefffb715'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18960101-18961231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18960101-18961231.nc' 'SHA256' '530b93cfb72093a4b2a5bc04883ce8b69747a7c79fb97200208c26d244ba2de4'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18970101-18971231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18970101-18971231.nc' 'SHA256' 'b09ca0110abbbabe826b9eb3361ca2def808eec418c267192921fa2b466928f2'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18980101-18981231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18980101-18981231.nc' 'SHA256' '41ba3e493e9306fd176ac4f4c960c31be077f786e63b04d1c25b8077021b2e6b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18990101-18991231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18990101-18991231.nc' 'SHA256' 'e41f38b4c9dac2d82afe8b5ee288eecb2c794c7035c31131fecd59c97f7fdcb9'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19000101-19001231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19000101-19001231.nc' 'SHA256' '5479b2beed360632a0a688e7c0def9b6d296658f7c50f6e9deaa0e50368ab190'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19010101-19011231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19010101-19011231.nc' 'SHA256' 'db4fc92276e873331a18577f69a43ae1170591d85183fc979c16a99ef9b49f11'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19020101-19021231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19020101-19021231.nc' 'SHA256' '2ade0ae63e39f139d47441224aaa3b6d96bc65e42ad12ec9bdbf60d25ba264df'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19030101-19031231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19030101-19031231.nc' 'SHA256' '82bfede04e55903fc71da82deeec3130c6da2b6bc5cf3b76e1334e6285b469bc'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19040101-19041231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19040101-19041231.nc' 'SHA256' '518eec78852710e4e707c083cf30358bc03f5b4cde6f92ec183af5a55570f6a0'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19050101-19051231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19050101-19051231.nc' 'SHA256' 'a4934f03f224f43f0b15f0b14a7c484598399e31f203171fa7b5933b229bb0d1'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19060101-19061231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19060101-19061231.nc' 'SHA256' '1ad45dbd6e6a2dc024f8ee576e592de049b4d477263098435f9e1b61e18c77a1'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19070101-19071231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19070101-19071231.nc' 'SHA256' '0947087c2ee625797a98d0d5c002fd60abcf499112096fc552d4e226d67ee8fa'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19080101-19081231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19080101-19081231.nc' 'SHA256' '0ce4ebd15634bce1a7e9b8d086d99c010cc88ef8cfec10304539570a437a7214'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19090101-19091231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19090101-19091231.nc' 'SHA256' '3c310990ba0de9d103b2cf3816733e40f84a9d920c8cbd699c13c4371d0a885b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19100101-19101231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19100101-19101231.nc' 'SHA256' '67d7e7672000fecde728ef3cb2ad624016e8d5ed92f5f0c6b8939d4b0847460d'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19110101-19111231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19110101-19111231.nc' 'SHA256' 'c996e0cb1dc2930e536c84413367423857952a1fcb01ecbde56c3dd98c10d9a8'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19120101-19121231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19120101-19121231.nc' 'SHA256' '151d450eb291a5147a450e2d30508f7bbb15101bd88f892a399619346ad09bdd'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19130101-19131231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19130101-19131231.nc' 'SHA256' '6ee42d5f3e2f5800e713edbd9dacd361e7a77704f521662db77da9239316f2b3'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19140101-19141231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19140101-19141231.nc' 'SHA256' '3bd68b43c4e55f6cf95baacfa8bd064406d879d3d19318095fb3e2ee0cdd8ef6'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19150101-19151231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19150101-19151231.nc' 'SHA256' '2abfa96a2d6fc5fda478458c864a34030459d26de9d8417783925d8fb1f207d3'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19160101-19161231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19160101-19161231.nc' 'SHA256' '5755e0fe9eb9965be46cf22c1e6a62c78ec7f528cffbb74a07f754d41c66ad8d'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19170101-19171231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19170101-19171231.nc' 'SHA256' '3c5bf0ffff96f89063c8792d57427293ba74ccf125cd262e4bfd6989a22697d4'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19180101-19181231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19180101-19181231.nc' 'SHA256' '2c8c2c67619b4ad113b96aa4e11985d67492248aedb40d98995175b3eeecd60d'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19190101-19191231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19190101-19191231.nc' 'SHA256' '2965d9374e2a86826c37b5f71f799d21723cb68ff7a400b4c79469331fcd9542'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19200101-19201231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19200101-19201231.nc' 'SHA256' 'e7e842eb52e83751a365a9651b050c5a7d3485515486f22ed4e31a7a20672248'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19210101-19211231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19210101-19211231.nc' 'SHA256' '06d562f4c892e1d8e1216b9e712247b77475c90a8313ed1ad669d6deb5c42318'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19220101-19221231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19220101-19221231.nc' 'SHA256' 'ec9cece553b42335e51353872c78ace2e5e1c1433b1a807a9452404557c96a53'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19230101-19231231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19230101-19231231.nc' 'SHA256' 'ffecf6dc8888956a4ea4fc447bc5e97a984a989e5b527a96dc6b23f8ef2102c2'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19240101-19241231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19240101-19241231.nc' 'SHA256' '76f772e59a2561c2481bdeca664c645483152945746d21a99ccb1f772c367b49'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19250101-19251231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19250101-19251231.nc' 'SHA256' '0082e1b718eb85f15403e9b1ad162e9409e34121edbeb3deb35ad71c916f4d3f'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19260101-19261231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19260101-19261231.nc' 'SHA256' '8aa9d3bda4a7d27153a35247d2c17cd2247b0a21f44e340cf93ffdcc12a986c5'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19270101-19271231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19270101-19271231.nc' 'SHA256' 'd566a1e99d01ad68874c6424ee1f90f1d7c615a0ecec26058b81891f261cb4e4'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19280101-19281231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19280101-19281231.nc' 'SHA256' 'fb3c1308cc6baae4d6d0b1ad0683a6b7e6f4c94a4604d2a0004711b609c12261'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19290101-19291231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19290101-19291231.nc' 'SHA256' '1d910f11ebb22453900ed304de1542c02be47a8838c9ed3193a1cf102e97d66a'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19300101-19301231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19300101-19301231.nc' 'SHA256' '02b8d0ef65827fc253676cb533fdd29ec992f56aef564a122840699cb5d36385'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19310101-19311231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19310101-19311231.nc' 'SHA256' '8fd9d9b1e51721f8e0545aea3f69a77f6b95be9b469ed0540deee8801004961e'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19320101-19321231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19320101-19321231.nc' 'SHA256' '942a2c3ea7b52a6e7cf1fad33d34849d76fb9dd27b07dd4676979c61a9c463ca'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19330101-19331231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19330101-19331231.nc' 'SHA256' '53afe251561474eae35c8eabda5e7bdd3047b32a3ee511e4156a1b0b5c0a8bac'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19340101-19341231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19340101-19341231.nc' 'SHA256' 'f35d9b9586daa2e08a4f2fb209a2d995bc31b353570f736b3db8b99282664265'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19350101-19351231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19350101-19351231.nc' 'SHA256' '6f411a29b081dc3ce9b38624748389a1e095c59b6426b73279b060294c390a47'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19360101-19361231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19360101-19361231.nc' 'SHA256' '7e02924900c93d25456fc5c0c933962a00673044270ed5af7d53c9e29dc13061'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19370101-19371231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19370101-19371231.nc' 'SHA256' 'e67bf7dd7224c007ff97703ed5a7850506e8e03b79ff0fe58b9a869297a84f40'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19380101-19381231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19380101-19381231.nc' 'SHA256' '7b2d158e0d0f3d2741380a8d52867ad6525f4d6d3e5bf2493270bcdf92132135'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19390101-19391231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19390101-19391231.nc' 'SHA256' '440bb3e806f1757bfa4760bac33b64333c7acb77e6cbaf320f42fc9e975a5236'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19400101-19401231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19400101-19401231.nc' 'SHA256' '2abcab3658b0aeef50f7ceec3b9116e4bc58fe632a1dbbb9678a871e9959d636'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19410101-19411231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19410101-19411231.nc' 'SHA256' '5d6bef334f97e3429724ac4f3571c7ecd9fe014f8df12edf3ee96fce6835a425'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19420101-19421231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19420101-19421231.nc' 'SHA256' '2074f28ce2a63cf0f103e43336510f1a5d3f2d572d9751d62820ec6dd3099e70'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19430101-19431231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19430101-19431231.nc' 'SHA256' 'ca59cec0d1ab9dc4780521cc83ba235eda6ff47ade62cfb6a021efb3dc18beae'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19440101-19441231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19440101-19441231.nc' 'SHA256' '47a8017f78639971d13d63ea8de0f4046002966f987cbaff569ace61c59459ce'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19450101-19451231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19450101-19451231.nc' 'SHA256' '927c391d272a14ee7c90150c3b838ba27d071574ffdc23e08ff9bda5ac019672'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19460101-19461231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19460101-19461231.nc' 'SHA256' '9dd429631b629fb2e82be99eb098ad963c03154383ea6d2a4ba63b185c6b3afd'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19470101-19471231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19470101-19471231.nc' 'SHA256' 'ee03bcff0e33b4bcf7133004653bb4ae2805226a92be96b501254fcb68eea5c6'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19480101-19481231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19480101-19481231.nc' 'SHA256' '4537f7807550a80ddcc8964702a683efedc97bebfbd9e2a57b56d37d3927a327'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19490101-19491231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19490101-19491231.nc' 'SHA256' 'd4fb949d88406dc81af756686eaff2ab8b53c6bfac5089638434c2366b5c52c4'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19500101-19501231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19500101-19501231.nc' 'SHA256' '4df4325c5013b2570ade95a920310e5c14cd45b9e9a434d160c24cdb5e45207d'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19510101-19511231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19510101-19511231.nc' 'SHA256' 'b96f66c361cf3f6a319f45d61e33ced1e7e3b7c43f2127de9d73ff4de917a424'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19520101-19521231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19520101-19521231.nc' 'SHA256' '0b230c88d968aab5e6d124abb651e5ef731f33b2c522a47c68d47b47c1f25fd0'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19530101-19531231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19530101-19531231.nc' 'SHA256' '11f0a142b9357d0dff254a5aa9cc5842e10a1c43043d6cc71ee727016d441c96'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19540101-19541231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19540101-19541231.nc' 'SHA256' 'a117e6fddd9b7d6aed5211ad97ff9de8f8c732f28f5925eb3e63fb655353e431'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19550101-19551231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19550101-19551231.nc' 'SHA256' '90651604f8ff2c6d81964471fd9d1d7f467c58a7870a9d1e773db0418715508f'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19560101-19561231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19560101-19561231.nc' 'SHA256' '704d773cf0468ba4623e6a7ac4114abd38c9a8494e0cac639e2baf3f7e1d4293'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19570101-19571231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19570101-19571231.nc' 'SHA256' '55b2949d30a6c2549b709ff6a31588d5f55d1187145cb8b44bd48463d01068b2'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19580101-19581231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19580101-19581231.nc' 'SHA256' '8a079f0e596615cd6a88f6d7851409d1c7657ddd81002c8da71df58d2e359dee'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19590101-19591231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19590101-19591231.nc' 'SHA256' '0c25a54a9c665b69d6297c51206591999f23fd7253d2b1343b7eff23f743cd6d'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19600101-19601231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19600101-19601231.nc' 'SHA256' '657e458ddce677ce919c58e7b6f597da12c3618f7f11a73df9babac50b2b3adc'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19610101-19611231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19610101-19611231.nc' 'SHA256' 'e0e7ed750d07b6f3f0e125d97af3954e98fa5edfc281a0cb0f72cf8637e18eb5'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19620101-19621231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19620101-19621231.nc' 'SHA256' '10e3aca41632547e6a1eecb300d0f68b700255b8d09e34fef838f5a601be7251'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19630101-19631231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19630101-19631231.nc' 'SHA256' '057653930f5ba97c2a78b99b85fe48a88882abc634f1590f2e91215f5c1e91aa'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19640101-19641231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19640101-19641231.nc' 'SHA256' 'f315b867ead9261de393e344b96bcdb1a6900afd751f93472fdb2a0446af1438'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19650101-19651231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19650101-19651231.nc' 'SHA256' '9366d6d42d32bccab5c3bc95cbbf3fc803ded7d32c89db2851b8ff00e644a9a6'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19660101-19661231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19660101-19661231.nc' 'SHA256' '0a1e2611d7c19e859e04ca890ebb215a7f6a8c525c9cc9d9f35790952badde55'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19670101-19671231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19670101-19671231.nc' 'SHA256' 'e6cac3d3538cfd6f0412abb49f23962915db34e1c6938daf447cd1f6e017a77f'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19680101-19681231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19680101-19681231.nc' 'SHA256' '2bbbb649365a1b83f9cac4bbd6a97b194bdbb8613330c3252fffcc14a09e34fe'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19690101-19691231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19690101-19691231.nc' 'SHA256' 'eb7d72f79f14cfbb0e6d1c3eb033f1646d8b31af19922281e3423676e4056dc7'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19700101-19701231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19700101-19701231.nc' 'SHA256' '4ab58da3e48fbe2aabfa0f51e0296071e2ed36834f81d7e69d400cd93516d258'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19710101-19711231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19710101-19711231.nc' 'SHA256' '0d721693870b01540d2a936726029757b714c5edce6d1a3558ae8b6db33b5f0a'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19720101-19721231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19720101-19721231.nc' 'SHA256' '3125bf0d174e6ba43836807bc914562a81b045858651a87c7906249e0ff14d0d'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19730101-19731231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19730101-19731231.nc' 'SHA256' '4a3ab189e523c66cf378a7f47554ae5f0e4f687321c26f804651eff13d895e53'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19740101-19741231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19740101-19741231.nc' 'SHA256' 'd5f53b105385507ce0656fb3d0ec035329662aa9c1ae02db9fe4060c94b8a08a'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19750101-19751231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19750101-19751231.nc' 'SHA256' 'd8f355352b1855256592940b3e90b5e68cb5a18110751eb4253701a63a804db2'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19760101-19761231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19760101-19761231.nc' 'SHA256' 'a6b554b7a6092e4deec5b8508e77ac8aa1d22cf83027f7cd18816b2f7c756ae0'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19770101-19771231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19770101-19771231.nc' 'SHA256' '9d42088883b27959d72627bfb09bda24811cb82067908748168d8b18750d96ab'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19780101-19781231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19780101-19781231.nc' 'SHA256' '7364dc0fb6ec38875071039930d721ce972ba482baf7f6099511a92288f6bd86'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19790101-19791231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19790101-19791231.nc' 'SHA256' '29a02ba7d5630fa0ab8bd88fa2a2a8b855957d786bf8e8089f628592c4cf6b67'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19800101-19801231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19800101-19801231.nc' 'SHA256' '4417aabcd0ed354a8720ad9c19c33f65758b564ac81d34e094869d389cd1360a'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19810101-19811231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19810101-19811231.nc' 'SHA256' 'ad497b2b897df68c4f752b0bc55e631554e8bba99e01b57c823764bc79c5644c'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19820101-19821231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19820101-19821231.nc' 'SHA256' '35cb452ca27f605cac17ebfb3814107714c902aaed05d8973d0821301f5506d9'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19830101-19831231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19830101-19831231.nc' 'SHA256' '309103b6fccec989f0195d98793309bbbddaf2a02d8d68aaaf2b480bed7c9fc1'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19840101-19841231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19840101-19841231.nc' 'SHA256' '897d1e5f6d2df860791d4290ac008d91a15b169c3ae9fd4510bb93836a22504f'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19850101-19851231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19850101-19851231.nc' 'SHA256' '83df082d573c195c5c9c82c0694a087163419a0210ce2465f2a2b07b6aa29571'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19860101-19861231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19860101-19861231.nc' 'SHA256' '80bcba285199e99581a45a119901b43ec0a69856d42ed2b06ab24726f3ce158e'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19870101-19871231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19870101-19871231.nc' 'SHA256' '7fcaf023c85cc4e69d365f89568d5948dcb2611cba824878ef5aca58ba502a62'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19880101-19881231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19880101-19881231.nc' 'SHA256' '3b6db0f25d65e623581fe67c93a56628a92d66bc76e9310efe0fe9cf70ccb9d2'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19890101-19891231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19890101-19891231.nc' 'SHA256' '43515beffa225d7789b7f9908cc61cac85a3e5670ffc5cd003992f1266a6e863'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19900101-19901231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19900101-19901231.nc' 'SHA256' '097ac7256c5bfbcd55009bfe2dcaae84bf612f34af7e2f32110599e60896d213'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19910101-19911231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19910101-19911231.nc' 'SHA256' '72b775f6e02d6ca24fce2d11100f3909f032cb716ac07b9650462ca75208d63b'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19920101-19921231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19920101-19921231.nc' 'SHA256' 'db459584da2afd997181c595c1582a88637417b2f09fea207d6cfc7330072474'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19930101-19931231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19930101-19931231.nc' 'SHA256' '7ce565e264be56de7ff8153072c47370a6b4ab814bf1a4587e0a067496fc0664'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19940101-19941231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19940101-19941231.nc' 'SHA256' 'c3f7a6f8ff04ce201750732aca2f1dc2ccdc63807e360125966d95df9399f0ea'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19950101-19951231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19950101-19951231.nc' 'SHA256' '7cd38a2a5f98e71a3a335d158505621db1699a772cebc4cfe6aa359ee4068075'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19960101-19961231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19960101-19961231.nc' 'SHA256' '44c086824a26f818f1efd530ee64dec260647add3280bcca7ee12923b96bbabe'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19970101-19971231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19970101-19971231.nc' 'SHA256' '8a87678577fc61c21e9f4dbb48d1ca01c95682191f59d31e106ad3e85020d1b5'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19980101-19981231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19980101-19981231.nc' 'SHA256' '9b302c067776d9e96ebbaeb216697250617d0c73bd9394135aac0140c73cf902'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19990101-19991231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19990101-19991231.nc' 'SHA256' 'e02b86b77a048cf1056f24c8f4d18ddfbe955c649787365487ce12ecfab332e6'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20000101-20001231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20000101-20001231.nc' 'SHA256' 'e1558b61674948df12dfc6010145c132396d60cad3846edc595fa5143a6ac781'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20010101-20011231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20010101-20011231.nc' 'SHA256' '94a49751c0f36b1c034116386830e640576efec04ff847f1c34aa18363f8b875'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20020101-20021231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20020101-20021231.nc' 'SHA256' '671aa7c292a420f2aeac69b4218c198a6343a3e315cb22fa7e7f7f0df08ea564'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20030101-20031231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20030101-20031231.nc' 'SHA256' '306322a8fa0b0a1c7d6d09430e18ac92b31c8bea1e5a8ab34b5f06c8f3e5b176'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20040101-20041231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20040101-20041231.nc' 'SHA256' '92a3f6aaf4081f4a5029cecd903445170eda7652f5897b7f1a1bfd87f45a0519'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20050101-20051231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20050101-20051231.nc' 'SHA256' '698350358e1bb81d637af6cd4701b8977d590a3ade830310065cbb01bb006d0a'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20060101-20061231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20060101-20061231.nc' 'SHA256' '7e97e2b2474a3e62f7d6fbb2d7c3a935a8a2e7a9d87a667684e064fd011bc75f'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20070101-20071231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20070101-20071231.nc' 'SHA256' '3c27a16510433547387213e912495176cbb04b76fd48dba678db1562e1a90e72'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20080101-20081231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20080101-20081231.nc' 'SHA256' 'd2becf54d0f18614a5eac8eff0c3cea1e5994891c4ca2630f15e0dfc7e3ad9f2'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20090101-20091231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20090101-20091231.nc' 'SHA256' 'cb03a98e9737ed603a725e3c5117f5f619a4562333f56e9fbdb96ccbb569f011'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20100101-20101231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20100101-20101231.nc' 'SHA256' '4c10c96931e0b17729d050bcae79e289b6260555bf304abbfd9acc3254eec4b4'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20110101-20111231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20110101-20111231.nc' 'SHA256' '130d4786470028dc831e7845e88a1790ba74f7f5be7ae61a7ae69939053c2dd4'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20120101-20121231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20120101-20121231.nc' 'SHA256' 'b1e9471db05f7df27e1ce5f9f302848f8b5d2a41f18c9aefdb0c9c7c30d38579'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20130101-20131231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20130101-20131231.nc' 'SHA256' 'b9519ba41fe38dad19d8fc0109b879fb5ea5e25c170fd3e23f3e739060815516'
'cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20140101-20141231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/CFday/cl/gn/v20200212/cl_CFday_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20140101-20141231.nc' 'SHA256' '65315cfd62866f733af81d051ec8eefc6fc9c234a02211db9b9b410399f4bd87'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 165 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
