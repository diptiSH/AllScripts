#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-data.dkrz.de - 2021/01/29 05:44:00
# Search URL: https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.fx.orog.gn.v20200212|esgf3.dkrz.de&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.day.wap.gn.v20200212|esgf3.dkrz.de
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.fx.orog.gn.v20200212|esgf3.dkrz.de&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.day.wap.gn.v20200212|esgf3.dkrz.de'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18500101-18501231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18500101-18501231.nc' 'SHA256' '336097aa29ac2b76aefc2d3a8644601a68b9a850664088cfb6ffa144f50575ab'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18510101-18511231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18510101-18511231.nc' 'SHA256' 'b79a66fc6cb48cc222f0d0eae43440dc04e7ba78ea9a4e424f924c555cb80ff4'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18520101-18521231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18520101-18521231.nc' 'SHA256' '4b4bcdfc3a70241050c25719475f325d25009e94efda1abb10d865f6a6022dd9'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18530101-18531231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18530101-18531231.nc' 'SHA256' '3f4c313dda895321220b41821527ee1e8a3a93be69241d5f1c284b02f6e861f9'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18540101-18541231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18540101-18541231.nc' 'SHA256' '6699d2e8df6d835ddbb59860a1042d701b9722b975d586ab89af6a5bcb05d625'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18550101-18551231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18550101-18551231.nc' 'SHA256' 'c204a43094959d2112c9b95811079446c12d18de9e5a67e2b3ac7145813f112f'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18560101-18561231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18560101-18561231.nc' 'SHA256' 'c49fa3697fa36cd3467c83a67360cdc2c2d2e75727cc26849f32d1aac406a8c2'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18570101-18571231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18570101-18571231.nc' 'SHA256' 'be4188477a196db1ee873324c1ff30550edec6baa403aa1c5dbace326989f559'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18580101-18581231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18580101-18581231.nc' 'SHA256' '016b6698a27f21f490ede936ed8eb428ef3ecd443a6cbd03702c52b4d3416646'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18590101-18591231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18590101-18591231.nc' 'SHA256' '62992ae19d26abb11fccf456eff52e2d7ba607b580f4ed9e9964b366668a5c0d'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18600101-18601231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18600101-18601231.nc' 'SHA256' '420e906a0645f334a015e2508d7c5bcd881925cd43e807b8589d5d6e305df6d8'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18610101-18611231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18610101-18611231.nc' 'SHA256' 'dc6babfd803fbea480a8ecde886a5a50a447f426b011ff0724907331a9524a01'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18620101-18621231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18620101-18621231.nc' 'SHA256' 'bce42f9d1aec6a488c238812c2f791c2741c6a962f6062b94bd9fda42e777649'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18630101-18631231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18630101-18631231.nc' 'SHA256' '58ab7e192dc7d72e53d69ca5f790bb97ac4f157ede8951cd90fdf4f0680dc421'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18640101-18641231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18640101-18641231.nc' 'SHA256' 'e7e0967558bd9e5df7e608c5adc0c4cbac7adf80e2f3a4fef2ab237829c4b717'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18650101-18651231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18650101-18651231.nc' 'SHA256' '951b7107f3affd0b3da30bb5592a44d8e6b82483887a6e6822f1ca64b4bb8709'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18660101-18661231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18660101-18661231.nc' 'SHA256' 'f263512a2b8875cae71d539c2c22640c111c20b9387a83c8d5de835d91f9e749'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18670101-18671231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18670101-18671231.nc' 'SHA256' '5392e639b6efc0f1274d27c066454a9b1a910e1b52768f01f8a59a24fd7cdfee'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18680101-18681231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18680101-18681231.nc' 'SHA256' '39439324d970414d4f5f46f7763a885b9d752a13161b70826c4f2c5099f9f81a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18690101-18691231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18690101-18691231.nc' 'SHA256' 'ec182c41ac8a4210ac56b48ee9e3dfd49d5e738c654ad2789967af7d1d97d479'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18700101-18701231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18700101-18701231.nc' 'SHA256' 'cf172bb0ddb0d575d07b81df9b1442722cfac7765e7f4f5b13c6284384f8898c'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18710101-18711231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18710101-18711231.nc' 'SHA256' 'c1af7f9cad53037b84ceab3e5c1e6777a4689eb3ecc57e93b43cf6728a37a058'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18720101-18721231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18720101-18721231.nc' 'SHA256' '14c47eb46b76e59d8b64ec856d47695dfc2d16082c4da06380c82560a2ede10e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18730101-18731231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18730101-18731231.nc' 'SHA256' '6474f0346e576984ed89925dd47f8d5216a0a868bd1030c26b62d70380486852'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18740101-18741231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18740101-18741231.nc' 'SHA256' '6c7238502438e5b6d52097c22df7ccf4a031a6e8a90d0b68971fc0ffd2b9941f'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18750101-18751231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18750101-18751231.nc' 'SHA256' '450c4416af9914b299e9ff85135ca6a2d45ce4d35cf324b170d68a661f1c50e8'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18760101-18761231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18760101-18761231.nc' 'SHA256' 'a3237fc834a9719d7cfccbaa9aca6ed20e77a2e6968cde3af6d2c14f91524805'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18770101-18771231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18770101-18771231.nc' 'SHA256' 'd336d9d5f82b5a5532a39df40412b4f031e0cf102f90bd062ac506e5d9b9e2f5'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18780101-18781231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18780101-18781231.nc' 'SHA256' '1f2098ac4a395a11b7b0cf7af853647b5b5d0bccfe6c99a9b59bb5e88df6456e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18790101-18791231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18790101-18791231.nc' 'SHA256' '5b6ce53a16ea75439d638e6ca62dc05e191a5c5c0c7b278bbee00b17e8eac834'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18800101-18801231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18800101-18801231.nc' 'SHA256' '3c8419d30b830f998477194d9e0a54118af0a0c1004585f692565a085a732388'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18810101-18811231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18810101-18811231.nc' 'SHA256' '119159d161c0eb8f157a3f3f14fcb048f8b92fd493fb1e95d0ecc6a9706e652b'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18820101-18821231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18820101-18821231.nc' 'SHA256' 'e3ad8fb08e1f29da62dfa22e46c1edcbc6e00f1bfb28f5bae96fad6a67cea8d5'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18830101-18831231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18830101-18831231.nc' 'SHA256' 'e433da74c2dd370aaf1c6e93d432ac4c1ed2df5e491ec24c980e121f680ccc8a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18840101-18841231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18840101-18841231.nc' 'SHA256' '1c647e7a25a729b3e850d52c63bb3383886962dce72f9d876badc9338b6a2f4e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18850101-18851231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18850101-18851231.nc' 'SHA256' '34a4339d7ac976e33c86397179f93e697a6cb6138f278dd84e27ba201dfe3368'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18860101-18861231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18860101-18861231.nc' 'SHA256' 'b5ceae78bb9ee79c018a2621f9f81c41098bfa13a2f39fe0340ee4193e446703'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18870101-18871231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18870101-18871231.nc' 'SHA256' '4f07c5480e492208228a87a4acf0bfd2644ae0fd2f761996b2b808d84ad05a96'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18880101-18881231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18880101-18881231.nc' 'SHA256' '74a79f58ae228843551e0d12472f4e394e4e4c5abf075025de45e67348cebcf3'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18890101-18891231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18890101-18891231.nc' 'SHA256' '1098da1c705d54a29f5aead0cc3efea1f1d0ab59b9bb355dc8df30f23b756f9e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18900101-18901231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18900101-18901231.nc' 'SHA256' '7aa827d58ae342a177def573bc77830fd38a97b0a66cd9a1477e61e93c27d5b4'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18910101-18911231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18910101-18911231.nc' 'SHA256' '0afd49edf400ec06f004a852dcac50e929ef4759e52d7b728d1922c40ce40462'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18920101-18921231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18920101-18921231.nc' 'SHA256' 'f34a66bb9bad9b5ef9b66b4c03056751c3adc5935a519a63aae2adb35e164957'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18930101-18931231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18930101-18931231.nc' 'SHA256' '8e1186bc12d234c32910c58c85bfe46a14d46b079291c2da4aa4eae994df2a8e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18940101-18941231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18940101-18941231.nc' 'SHA256' 'f6ffdb194049cc918b7b78fe1735d0b1e6a35483c9c0a4a939de74d1e5090b5f'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18950101-18951231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18950101-18951231.nc' 'SHA256' 'f08d6426a5fc02114b6fad836f96e4a7b51b04cd070792bbf9082761ae7e3368'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18960101-18961231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18960101-18961231.nc' 'SHA256' 'a8f555313787647176e3ff7948ce326d70f64e3aa65faff2237bb3724107b36e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18970101-18971231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18970101-18971231.nc' 'SHA256' 'd8db02d10c94fbfc1f6e7943f4cc269eacf26de4f3b5379d1a47b0c53629d8de'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18980101-18981231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18980101-18981231.nc' 'SHA256' 'ad06492d66e4180c9ca53efdf86df2f1370d3cbc61219467244f37975a9c1e43'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18990101-18991231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18990101-18991231.nc' 'SHA256' 'e45024494e8ed7cf9ef75aa9049b3f9dd7937938412a80843b27fbc1128a88d2'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19000101-19001231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19000101-19001231.nc' 'SHA256' 'ab3e48bee023be47ee60016c5dc0bbd1639b4c292cc795df0de5f9d5afc438fc'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19010101-19011231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19010101-19011231.nc' 'SHA256' '0bd3e04b2deecf6f009502e1e1f9cff12a810a38e3f168b4707949e757922e0f'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19020101-19021231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19020101-19021231.nc' 'SHA256' 'a90ba93a3a1d1e42e595193f4aabfc6cf8d3da3e50f906ba16bab781860f6063'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19030101-19031231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19030101-19031231.nc' 'SHA256' '52ac7ec80cbd86356ede439df2f5eea06fe236f20514fad46c90014360d0c7b9'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19040101-19041231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19040101-19041231.nc' 'SHA256' 'ab805c12b822c9de8511aa9c1be2e7224a52270e4e6a347bb22b1a477bc003e1'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19050101-19051231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19050101-19051231.nc' 'SHA256' '734fd955c74dfbc08de71236701db48c858abca08e802fc36b06c56d9679ec09'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19060101-19061231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19060101-19061231.nc' 'SHA256' '5f11ee382ad75e15239647645da728a099f232d7d9ca879d6ad717365db1ce5a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19070101-19071231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19070101-19071231.nc' 'SHA256' 'df41e2290ccc738158a4a570a6ef1f839c37e9a02a0049833cb6caf62e72ae5a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19080101-19081231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19080101-19081231.nc' 'SHA256' 'c254320f7229ace50256ff2fc29420f4d0187a7b3a0bd1029a9d85cd58d7e80e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19090101-19091231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19090101-19091231.nc' 'SHA256' 'c233a5a8501e0113e1bb6661d800f3cc9dd51b3435c7cb6299599b9d5fe9ea25'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19100101-19101231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19100101-19101231.nc' 'SHA256' '7b9596eb7b9aabe0bc747352ad9c0398695351df4dfeedca25689f1d341ea160'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19110101-19111231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19110101-19111231.nc' 'SHA256' 'adaec0a40963a17f1ca060dc75a4f4be68fb706f194fadff908a3a19f07b00ba'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19120101-19121231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19120101-19121231.nc' 'SHA256' '0939818fa7020fe615ecf233a952de5b4583b89044f724c029466b3eb43e1956'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19130101-19131231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19130101-19131231.nc' 'SHA256' 'fa43485b982527cb84d0139f2acd22a0bcc4e4bb17a1c019dc73ff8df920baa4'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19140101-19141231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19140101-19141231.nc' 'SHA256' 'bd5597a03304e43ca2d464fc5924dc693395b7afbc48e342b1cac0104d8de402'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19150101-19151231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19150101-19151231.nc' 'SHA256' '7baa98f930442ffe3bc09d4431926d52c987c5ce27688a1eafa6a53229cc5724'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19160101-19161231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19160101-19161231.nc' 'SHA256' '7a553b8be275007b7d65eded4138e6fc09d07aeb7854b6ade1949bbe535dbb2a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19170101-19171231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19170101-19171231.nc' 'SHA256' 'ab3c95d6657b6011cf2c6e345107e94d8481975560d5ee324621dfb4a0971b7a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19180101-19181231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19180101-19181231.nc' 'SHA256' 'e17cf4138676d483a6c985e2ee9f856a0e6a06373db11f08feb42883a075a606'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19190101-19191231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19190101-19191231.nc' 'SHA256' '5e58f0702b91b6e960ac1939a49902172fd59b7647a36b674439d4c486698ab7'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19200101-19201231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19200101-19201231.nc' 'SHA256' 'fdb82e4c533bf45719e3782c7c3f99e6f6806692587eb5430edfc2485e2ddf08'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19210101-19211231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19210101-19211231.nc' 'SHA256' '5f0b7543a1eb28832d711eb90d438a0b2a4789030a749b3aab9db44fd08ad72d'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19220101-19221231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19220101-19221231.nc' 'SHA256' '04759b09cf354033c06ea58f3c103f4c45c58f60fb179429ddf45ab3fed8ec77'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19230101-19231231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19230101-19231231.nc' 'SHA256' '1139ebd80500101bf29aeab1950a6d5a8d963b48fc29effb017b3bd2fb8fe900'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19240101-19241231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19240101-19241231.nc' 'SHA256' '901a81408149b570f387e0a5d3efece933c05609c7600c5228a1c735770945be'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19250101-19251231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19250101-19251231.nc' 'SHA256' '7ce44579eee6b65eb6698826767f50d549f5ea93c4072838145665dc3e3cb60c'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19260101-19261231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19260101-19261231.nc' 'SHA256' '35fe4f22137687af190cb3aa34b916505e657cba3ec3acb5332e980f1750a8a5'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19270101-19271231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19270101-19271231.nc' 'SHA256' '1a961399e673f1d2a029ca68daaadb5bf1e7d65fde97892ed7470e502f8955f3'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19280101-19281231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19280101-19281231.nc' 'SHA256' 'ee0a76807342a477ed24c821169551c88040dfe0e88e6f82f2a7896444c17667'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19290101-19291231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19290101-19291231.nc' 'SHA256' '3cf66e2b646399c9f5d0120ccb7f0a95b3ef940026978407a8452bc948fb78ea'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19300101-19301231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19300101-19301231.nc' 'SHA256' '952986f82b68a560e013d0104be6d0fa0a472863630174a6bfb2dadc572a5699'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19310101-19311231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19310101-19311231.nc' 'SHA256' 'cd18d857267048732d6fc108aa01114fd70cea938ec4538f94b5d2ce36352894'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19320101-19321231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19320101-19321231.nc' 'SHA256' 'bba53e32bdbfafa40d0e863a1cd8939f208044c7302fed0ca26abd149779da5e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19330101-19331231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19330101-19331231.nc' 'SHA256' '6d9c7c775187692e6d67cb5dc6cd56f971418aeb34ff7cf37ed336eb6981e07b'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19340101-19341231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19340101-19341231.nc' 'SHA256' '8753801d9e1fcb113fdaad90bd02d50049e2d9a265a64d8d88d13b8bd9834aa4'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19350101-19351231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19350101-19351231.nc' 'SHA256' '61e6dc3971882d7734a1c99771237448215ed3e7e3975bfe64ba9bb05e22dc7a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19360101-19361231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19360101-19361231.nc' 'SHA256' '160922cb2a8db7614fa06673d8481249f4472a4046cb09184caddd2977846693'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19370101-19371231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19370101-19371231.nc' 'SHA256' '5939fff9d5c37f5d4660a37cb264c21ef61f85d824ead2b8c8f716f9364e6277'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19380101-19381231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19380101-19381231.nc' 'SHA256' 'fb9478074e233c6a59e3db658f7f203888afb64b6994da80160dd1622b2a3275'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19390101-19391231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19390101-19391231.nc' 'SHA256' '201cfc2e96a3008a928eb3c2300628d0eff85544669a8b417678c96a34de17b6'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19400101-19401231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19400101-19401231.nc' 'SHA256' '1f4fc289959170161b4c19abeb1e66b4c93effd8e5de15d3a8fb937c8974e4fe'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19410101-19411231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19410101-19411231.nc' 'SHA256' '9aea5d6dfe667e84f3dec998c04099365e22263bb74416daff5aec3372a6904a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19420101-19421231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19420101-19421231.nc' 'SHA256' 'a8fdd27c8497cffc20e3594a018d3fff145a8884d6f54a9d695e41642afc1163'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19430101-19431231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19430101-19431231.nc' 'SHA256' 'd05c014ade81de619cb1d02bf5ba84cf072e109ae18fcfd7d8a29f643340cff3'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19440101-19441231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19440101-19441231.nc' 'SHA256' '3ed21443cd02544a41ef192b84a41d19a6b3973b5e4627e8884907fce770f502'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19450101-19451231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19450101-19451231.nc' 'SHA256' '599de692161afd0d30204156c9ded5b2f21ef7c31d8beb656387bd8809017b27'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19460101-19461231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19460101-19461231.nc' 'SHA256' '09db622b85b0213ded7b8d73c254cc79cda426239c940d39ad3526243fb8908e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19470101-19471231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19470101-19471231.nc' 'SHA256' '2924717d2fc66d2cda1ff22e24c899c9813f1e62532bfbc5686e0464a3d8c709'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19480101-19481231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19480101-19481231.nc' 'SHA256' 'f3a91c73f6ca2063d523fc84ccb7fe2fc156084edc49684a445a93696f63203a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19490101-19491231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19490101-19491231.nc' 'SHA256' 'f6d8db59b6edb5987aceafe67c0d5b9dcc98438c675650dcca9b82222a5337e6'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19500101-19501231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19500101-19501231.nc' 'SHA256' 'ff03f1d8119e398c988971e98714298d53e320360051d6d9625e17929332a60d'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19510101-19511231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19510101-19511231.nc' 'SHA256' '8ddddb612f94cd662b2f9483185ded3cdcb9172656f58e90be7c65d2dc06b31e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19520101-19521231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19520101-19521231.nc' 'SHA256' '1c03ce28a94ea6ca989a6c3fc4247d0050393e0c6f5add0e24b83a75ec20aec4'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19530101-19531231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19530101-19531231.nc' 'SHA256' '651ba37c6ff79ec9ce95be5e52b42e30a547300ca8b96e0a1290c498867a0543'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19540101-19541231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19540101-19541231.nc' 'SHA256' 'db10e74c9b9ac28b9ef001839f13e3e64ea2ae8296b3df1dc5028eb99a8e741b'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19550101-19551231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19550101-19551231.nc' 'SHA256' '3891440c980e4c8592c5a2574a8a9e312504a09d479c210aae9781865318e7a1'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19560101-19561231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19560101-19561231.nc' 'SHA256' '0e93a56bc6243e72eb85e9e44ae02b9b8543293dbbee4ea8c9909b3ddd01e87b'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19570101-19571231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19570101-19571231.nc' 'SHA256' 'f9f2d49f60dc9e36538fb28da449ff7649c2f1c1a99292e6fc69dc9989fc779a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19580101-19581231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19580101-19581231.nc' 'SHA256' '199352a183b18b93e240d4c519d39076f7257367c829ce26062b2aa3cb5e91bb'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19590101-19591231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19590101-19591231.nc' 'SHA256' '8b4aa1feb5a7dede3e2ef2196f3de1a920a771eec7215a9baaf65feb0a880a6b'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19600101-19601231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19600101-19601231.nc' 'SHA256' '1792aa18b916b559ce5c3b5b7d85fac7beca0d7ce99eaab31ca869f7eacb4b6c'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19610101-19611231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19610101-19611231.nc' 'SHA256' 'f3549ddff0da17c1fd1ce154ccdf53c7b658ffa3484cd93a6b09cc476660cc1f'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19620101-19621231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19620101-19621231.nc' 'SHA256' '349f8fef229db3eb31f58d85f42bab8b78c3f4f076315e10b742fe2aa409f25b'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19630101-19631231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19630101-19631231.nc' 'SHA256' '3e23a150491039fd7ec63fa2d73ac7615644c873aef4a1dd692b25f535c2b036'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19640101-19641231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19640101-19641231.nc' 'SHA256' 'a6a8abc54b742d02fb2de60b25cc83047d485705181b5afd2a6d785d17134ff5'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19650101-19651231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19650101-19651231.nc' 'SHA256' 'dc99cd0eaf794cff0b4a522c9b224a395221822329592a456f9cb024081f0fdd'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19660101-19661231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19660101-19661231.nc' 'SHA256' '30b72943617cee26e803e1b1ec6626bbebe1d563a25039662cca32eab4c15435'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19670101-19671231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19670101-19671231.nc' 'SHA256' '2a18e5a18d93c2774a490bd2ea8fba783f154dcf763e3abea8ced4023a790295'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19680101-19681231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19680101-19681231.nc' 'SHA256' 'abb0880d866cd7da6c09154f0371cfe6a1a06a5ce925cff8feaa1f1b84bb1c61'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19690101-19691231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19690101-19691231.nc' 'SHA256' '7e2e1b78abfe727a49dc3d0e1d36d384dbb01e47b0f88576a115d302569a1bb8'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19700101-19701231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19700101-19701231.nc' 'SHA256' '2d44cf6c7bafdbb55ffd7feec77de881eb0f8ae25992f61fbcc6be289121f118'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19710101-19711231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19710101-19711231.nc' 'SHA256' '692aa838abfc0c653cb91f5b273760e2d5105661b9502e3d0e9f7d7625a4d2e2'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19720101-19721231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19720101-19721231.nc' 'SHA256' '4923e1df28a1088d3ab60549125b201b137963d0d592093bafe1809663b75e45'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19730101-19731231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19730101-19731231.nc' 'SHA256' 'e195452c75bca754f42cf3d35869befc22a74799b740a07382c0b4975418a97a'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19740101-19741231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19740101-19741231.nc' 'SHA256' '14c9497a85e7a3eb1d783a150a187d1c9e9fe455023d798624c22d5d24067a35'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19750101-19751231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19750101-19751231.nc' 'SHA256' '327867bd0b6fd4940c9e11a2e0dca13ae17adf7a2682860ff14c8efaed661a26'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19760101-19761231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19760101-19761231.nc' 'SHA256' 'b7c77bb9f81270e5284a8b874fa290decad537177a229eb490219646c6b2061c'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19770101-19771231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19770101-19771231.nc' 'SHA256' '76f41d390f8ba47eaa9115d1d499478d6a2a9eaa41ea392b3a36a8c1adb26221'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19780101-19781231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19780101-19781231.nc' 'SHA256' '27e78e14ebdddc28a1b793a3b84f22e0a69f6e434daacc05c5641245d8ab0b25'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19790101-19791231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19790101-19791231.nc' 'SHA256' '9633154cee79ecfcf0de45083cdd40676aae01e5aecbce4defc07d227b0937d0'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19800101-19801231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19800101-19801231.nc' 'SHA256' 'e57ce2de68ae54613bc241f54a9076484902050252b7b078445658edfd9cb94d'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19810101-19811231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19810101-19811231.nc' 'SHA256' 'a8e09b3df1d5cae086cf8114ec80694cd8c30b77601b09903075ad397b63e351'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19820101-19821231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19820101-19821231.nc' 'SHA256' '45083a1de5e0b3e67badb97316c7020150851938d8dbffe577f5b74452c3c77f'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19830101-19831231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19830101-19831231.nc' 'SHA256' '3be318faa51bed6b40cb550bf3503537c4b940d8fcc7abf0c38cb4f4fb9a0ade'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19840101-19841231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19840101-19841231.nc' 'SHA256' 'dc673b8246dade20a85dec7edbc6c90c6cfcdf1451370667e38a2be59f5f314d'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19850101-19851231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19850101-19851231.nc' 'SHA256' '0d2b0eec0a512639f7cd287ad52486347887576714dc7a8852262594f0c83cbf'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19860101-19861231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19860101-19861231.nc' 'SHA256' 'f855154bf3d012e9a48ed38ea736996c3ccf65bcbbd9b996526dad638d004ccf'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19870101-19871231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19870101-19871231.nc' 'SHA256' '16623860ca57adb7c61bd352f712013fad0a98db2bc9c060eb91692e7f5375d6'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19880101-19881231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19880101-19881231.nc' 'SHA256' 'e8bd079c9d0e21846d67bc8bbd8e797ffdb81abd910bca8c2ece0a85349efef3'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19890101-19891231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19890101-19891231.nc' 'SHA256' 'f58345a86cb1c245df745acf33b4e0893db966db4f77f296ba5b964192b61beb'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19900101-19901231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19900101-19901231.nc' 'SHA256' 'ee4d3f0ff46b61cac8e9a4801131898b0f6e86b939ece7d04e3aa4469e8d7ebd'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19910101-19911231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19910101-19911231.nc' 'SHA256' '360d2360ece637394c75793d648146056f87c318b98b6a76f34ffbc3e23ce6c0'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19920101-19921231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19920101-19921231.nc' 'SHA256' 'cee464110d7efe50a4d0f5eb2ae026f7def9d2e8b9b9b03e0e72338bbcfb5595'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19930101-19931231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19930101-19931231.nc' 'SHA256' '176eafa561e2e1902a3ee0d6f7f42c8d53dae62a6f97fbc299b60d6dc9700cb4'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19940101-19941231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19940101-19941231.nc' 'SHA256' 'd5b56a56919bbcd1a54a85eab97315da01c8e95dbdd93e16a6b00f90209167d1'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19950101-19951231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19950101-19951231.nc' 'SHA256' 'dae55a8a6783c15399b9fff6d452b04cac5046fdbb690a7717130de5bcd94b6c'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19960101-19961231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19960101-19961231.nc' 'SHA256' '788d4f1c09c7eee74022b8423de1b6f8073d2eaaf4b7837f2f753e02440d59ce'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19970101-19971231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19970101-19971231.nc' 'SHA256' 'a281bdeeef655be317cd4a884a308a5fd426478ebe5eab60d500e26ae50bf822'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19980101-19981231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19980101-19981231.nc' 'SHA256' '05bf6435f1205f222000cc0fa2e3d8827499dcfabe5ac58f0f2399d4bf51b0cd'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19990101-19991231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19990101-19991231.nc' 'SHA256' 'ce7f96529ae4a55578a4cc3127275aa403bda8b1cbf4bce88a74dcc74d7c7fba'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20000101-20001231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20000101-20001231.nc' 'SHA256' '45d9c21f0cf6a158e56a9de2954e331aa0deae5acce9cfb341629c05fc62a57c'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20010101-20011231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20010101-20011231.nc' 'SHA256' '8c95fa992d65d09ece336ee9b1513ea29f9aee19bee1e9d8510e4552012eb629'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20020101-20021231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20020101-20021231.nc' 'SHA256' '83c856ac1821b5c662f67bb2379e1b7403475a3320892c7203fa2d96f17a90d7'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20030101-20031231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20030101-20031231.nc' 'SHA256' 'b9c6e35b1cdd4712eacdf9a249be7580552136e55bbb5ff371afa952bfc1624e'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20040101-20041231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20040101-20041231.nc' 'SHA256' '0b36dafdde69fcf87eb1980d84928284e02629ae01affdcdf51f47d4ce911705'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20050101-20051231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20050101-20051231.nc' 'SHA256' 'f548ce4a4e6a634cddba360f111f459f66187730474efd978d80bf2e30c50b5b'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20060101-20061231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20060101-20061231.nc' 'SHA256' 'ec7dc43f124f87411d9a6010f355ec11efb22272903993182a68301bd7695827'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20070101-20071231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20070101-20071231.nc' 'SHA256' 'bc754841d7188ec371b784ff1b0916f6d1cdf4d8b660d2946dd51f9993561479'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20080101-20081231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20080101-20081231.nc' 'SHA256' '9a18c0fdfe08fa5f9bf273644bcb143bca6badabe531573ef4ecbbe2fbb8b453'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20090101-20091231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20090101-20091231.nc' 'SHA256' 'daa406852dac6ec367c904ce10ce0ad092a274a6814095f5f212c580b18501a6'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20100101-20101231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20100101-20101231.nc' 'SHA256' '4b05a8e766761053eb9af9e109358a300fe937bfe9a4260c82c5d06000a3aa8f'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20110101-20111231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20110101-20111231.nc' 'SHA256' '14a1be976112403d99e04000e355c44260382b01eeac8156e4f820901bf19273'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20120101-20121231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20120101-20121231.nc' 'SHA256' 'edab51e9cbf018bc4fc4d695883531b16e05fe7d1a5abd989b2ea9f401c230a5'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20130101-20131231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20130101-20131231.nc' 'SHA256' '8a7604da43dc7f3834c36c935fc2d38aa20a284060356a7a616275f89f6f2e48'
'wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20140101-20141231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/wap/gn/v20200212/wap_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20140101-20141231.nc' 'SHA256' 'ae093b28eef8dba360aee5bb432cb73d1c5de3e24802ea090b325ad11bc1d0c3'
'orog_fx_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/fx/orog/gn/v20200212/orog_fx_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn.nc' 'SHA256' '5be91df04ac77222f9d666f02c1d213670f74c3da895c928750ae200d5bfeaff'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 166 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
