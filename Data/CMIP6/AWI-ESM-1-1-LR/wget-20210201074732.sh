#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-data.dkrz.de - 2021/02/01 07:47:32
# Search URL: https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.day.vas.gn.v20200212|esgf3.dkrz.de
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.AWI.AWI-ESM-1-1-LR.historical.r1i1p1f1.day.vas.gn.v20200212|esgf3.dkrz.de'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18500101-18501231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18500101-18501231.nc' 'SHA256' '3cb0f8faba7476d7a9fcb50dae4166ef628935bfefff135aadaa39e2d6b04fa1'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18510101-18511231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18510101-18511231.nc' 'SHA256' 'cf0c4558e003df40d7c93f7a9b832bd633582fd253a3deadb47b9cba322e3012'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18520101-18521231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18520101-18521231.nc' 'SHA256' '32e5dbeda1b1711a70070b19aa2e43c05b333d34518f45810ab5d5001b240e0c'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18530101-18531231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18530101-18531231.nc' 'SHA256' 'e871e421699ee829f1be3362c7b49d12c092db53c4d7803e89296bbed0e3e5bc'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18540101-18541231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18540101-18541231.nc' 'SHA256' '7eeb0fd4d331b551fcb7892b1989861275bed78b9e98976ba57312502c653dd2'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18550101-18551231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18550101-18551231.nc' 'SHA256' '51bc178cc4fcf39733c9336b32235a8f00253c5b657be6d0e1e49b12cc9fa681'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18560101-18561231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18560101-18561231.nc' 'SHA256' '8f05071c41e5373c6de82bffb73b90117bb50cd7ed7de6aeb25917e114e41310'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18570101-18571231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18570101-18571231.nc' 'SHA256' '7066084adcd0e2bbe5625f3467ce59e76fd1ed5d9ae506c87c2bd6db6eb8ab45'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18580101-18581231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18580101-18581231.nc' 'SHA256' '2aad4863c21dd5df5c6bc6e217ff631c5d1909a867127569d0325370ba07d50f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18590101-18591231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18590101-18591231.nc' 'SHA256' '469f91cb34d3f37e19acd63bbe7f450ac8a96f09298ddc9b5e4f5e988a581e6e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18600101-18601231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18600101-18601231.nc' 'SHA256' '7e64b6ba6d1ebc0bdbfa2dd73d976fabd238aef6abe89e4691aa4f380355ee60'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18610101-18611231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18610101-18611231.nc' 'SHA256' '114bb7834c85d5a404ae25371eb22446f7044faa3b8a9b20349b7f34afd09725'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18620101-18621231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18620101-18621231.nc' 'SHA256' 'cd5ca66a2ba8a6011d1264105acbd22eea634011fef309e666f386f36b18bcee'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18630101-18631231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18630101-18631231.nc' 'SHA256' '4ec82a19916efe9303b64ae19b3108c0ee6af8dc808a8d97ddf7656c874abb57'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18640101-18641231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18640101-18641231.nc' 'SHA256' 'bd552eb5a8068d5f68d8b8086ff80212e0bf5ea0629f2de1b36e9b3611744f09'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18650101-18651231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18650101-18651231.nc' 'SHA256' 'a0bc0f8ea878d9330b2170605078d3e158591587cc7e9a3cb7961e739e691050'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18660101-18661231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18660101-18661231.nc' 'SHA256' '6f821e7ae88e12ea16e6341d2aeaefa5d416e76a0f0b9be83cd406fb274c24b1'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18670101-18671231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18670101-18671231.nc' 'SHA256' 'f30f54745675825bcb204b2dd07bc44a316cf0568c68e1138eac0d105227a0fa'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18680101-18681231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18680101-18681231.nc' 'SHA256' 'ed0a51f4cb2b4528211d1198d8a38fc24c844a2cef79e6fe68d049a658af1b37'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18690101-18691231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18690101-18691231.nc' 'SHA256' 'd8b963d4b91c39ef34bf73afbde7817d95e658dda4991cd27582b78b685a0b3b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18700101-18701231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18700101-18701231.nc' 'SHA256' '3cd0bc49cce1cb88007cc3a3cb4b72fcdb26a534f1ea7d459671412b7d14845e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18710101-18711231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18710101-18711231.nc' 'SHA256' '68beda094855387db9e1ff3c90047e112e79ddd3a840709c0c492049eedc0861'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18720101-18721231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18720101-18721231.nc' 'SHA256' 'e043dd8fdb295a2ea089f9e6858f64df697d661c3c43c3e16814d89ee904ce24'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18730101-18731231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18730101-18731231.nc' 'SHA256' '51227e63e03a13fdc170026fd4dd991db3b44036722269de7e3342741e49e8a9'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18740101-18741231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18740101-18741231.nc' 'SHA256' '02e8aa47119c311a630d82a863ccd363373f89fee2a00262817154398ad27d61'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18750101-18751231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18750101-18751231.nc' 'SHA256' 'bad3ddb565c9ccee5d7d23128d2ba7620348c9756169e8978605bb1afdab43e5'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18760101-18761231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18760101-18761231.nc' 'SHA256' 'b240273be0775688fb35a5eb8c6c1f69bbfef273d8c4a02ec1c96856059078d7'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18770101-18771231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18770101-18771231.nc' 'SHA256' '7c2aef0495c49217c63c4c2c7f9e4834e7b45a1afbd7f746f144893dd5f3d9cf'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18780101-18781231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18780101-18781231.nc' 'SHA256' '2735af331422ae5fce8f9808784790665f5927defe0690a047de3b84b3e801ee'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18790101-18791231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18790101-18791231.nc' 'SHA256' '3fc1bc1ebe07fb8d2852fce432dd081947aad8b1b1a79340b5be9f1e979d1964'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18800101-18801231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18800101-18801231.nc' 'SHA256' '053655be66df9ef827a9dd65abe6f1e70787022028d334085fdf7a92aa90b734'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18810101-18811231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18810101-18811231.nc' 'SHA256' 'ea91d09c841c3d133b6914d317b725e10334a04437c5d0510741bf537eb3fc03'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18820101-18821231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18820101-18821231.nc' 'SHA256' '2513dee5c62b5b6c296abfcc620d1dcecbfd91e28a5b1341e470065d8df2ed07'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18830101-18831231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18830101-18831231.nc' 'SHA256' '5d93bc70a8b906005fb67433c4def54ac2b6e1a333ab2d88ddb044aac8a802e6'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18840101-18841231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18840101-18841231.nc' 'SHA256' 'd0f4b2d8a66c956828b634ab35f80c37d390cb39e632a6902e18a1c62e214e64'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18850101-18851231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18850101-18851231.nc' 'SHA256' '8c16f8aa4e69dff14915b3defe8119038779b5e777d75787fc7ffbbf7f279d39'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18860101-18861231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18860101-18861231.nc' 'SHA256' '5fd4bdd4efa10747fdf2e2c1ffe592437be3c7ee63dae8ad540a89df27c1d910'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18870101-18871231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18870101-18871231.nc' 'SHA256' 'd7ce436bfe274a2894eed55a9cddeb787581034c2a1cefce91060c83eaf12ef9'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18880101-18881231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18880101-18881231.nc' 'SHA256' 'e17fcb3669ec9c0d8a188bb730036953a8d1ac242a99dae651fd84b8b0209158'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18890101-18891231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18890101-18891231.nc' 'SHA256' 'b4816eec34e73bd1099c76eb407af4f8b057a13b60553a967215badbaafee0c4'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18900101-18901231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18900101-18901231.nc' 'SHA256' '299618bec47caf9835bd11867eabdee9cc010ccf875b14993127553374955e23'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18910101-18911231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18910101-18911231.nc' 'SHA256' '4aaa2649fac3c40507c76b84c6dd953abb0e848089eddbce34a82e3a984f427f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18920101-18921231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18920101-18921231.nc' 'SHA256' 'cf403f4e3508c9131727738d5ba613591a7a00cf48eddebddca09acbafdba99b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18930101-18931231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18930101-18931231.nc' 'SHA256' 'ccaf67d1a666c58a2218cbf22f86d5b71786ec8b2c33ab0dc41a2847b4976c17'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18940101-18941231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18940101-18941231.nc' 'SHA256' 'c0ace06eea1be70a18f8dca700eb973e540ae836f59981d4ddb36b67f59e7a47'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18950101-18951231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18950101-18951231.nc' 'SHA256' '3b14e706619cb5e8f6258d74a856181192c8bab7350ffa8d12e7fa6bffb2e56e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18960101-18961231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18960101-18961231.nc' 'SHA256' 'd936b41902323520039134adaeb867c90afe42b18083ab4530973111bc86b76e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18970101-18971231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18970101-18971231.nc' 'SHA256' '2c024470bfaf853cd223a439286e8ea501de56fb558752522575af4657e680ef'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18980101-18981231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18980101-18981231.nc' 'SHA256' '648fe423cf4e4416fad02b8a1ab0c2c126319fc044f4ee2866599db135bc7936'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18990101-18991231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_18990101-18991231.nc' 'SHA256' 'd25fa28d49060cc768eeb4f45de5e631cb3ddee2238a8853a839d01a6a6fc9c8'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19000101-19001231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19000101-19001231.nc' 'SHA256' '96cbc7027a17959e4a65518be2e9ee580cc89ce240d72dd39620823b728eecee'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19010101-19011231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19010101-19011231.nc' 'SHA256' 'd9e5c7bd39183e84e65610dbfe93e97e0aa0d13114cff419d845898518371ba0'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19020101-19021231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19020101-19021231.nc' 'SHA256' '493550832765aefe8f2c522556a0d1e51c1f0982adbcd6a1cd00efad71f894fd'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19030101-19031231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19030101-19031231.nc' 'SHA256' 'c03d29e66323b1bfce63f49ba987de034c77f326a4b048a3cbb656bc8bdfa9b4'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19040101-19041231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19040101-19041231.nc' 'SHA256' 'ce9cedbea2d09dd1c82bbcb12561dcd796422ed2561c488dfe69864f45f379e2'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19050101-19051231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19050101-19051231.nc' 'SHA256' '374a90f3ec1eb3c3f33fa5e04b43531a564bf4997cac099239c839ca15e8d967'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19060101-19061231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19060101-19061231.nc' 'SHA256' '91448d1ac1861d09d31419be0c5211b2b0459475004ca0bf6e2d22653519d831'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19070101-19071231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19070101-19071231.nc' 'SHA256' '6a7b4008c91f52cf8984c215060fbe55f8f99fe8dab78b49c5c1ac2669015f76'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19080101-19081231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19080101-19081231.nc' 'SHA256' '448cd0a61d847b8907bb657b4fa7ff201c7c9699549485ab4c678aa753f98ac4'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19090101-19091231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19090101-19091231.nc' 'SHA256' 'ffae6ac8294cc64625d4c684110edf7b22d41802f331fc740e173624d6a37660'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19100101-19101231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19100101-19101231.nc' 'SHA256' 'ec082bf837f2ab3778918f3b89888af116a9543fe70c832451afffb9a8bf0ccc'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19110101-19111231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19110101-19111231.nc' 'SHA256' '00618b109084ff52feef7a4fd31c3bc352ffccf009c3a2d0b9040e75410ca6f5'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19120101-19121231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19120101-19121231.nc' 'SHA256' 'f71c39f01224df51aab0a0439e3c9571f4896657f4a723744eed1dcf806c0473'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19130101-19131231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19130101-19131231.nc' 'SHA256' 'e6adfc0d51b7b6867c17bfe2715420d7c1629d06db8a09981c51c3b1d424d0e1'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19140101-19141231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19140101-19141231.nc' 'SHA256' '301d56be5f38e2c780ab29f37d1e59a32cd6fdbff99b039e0376e42a46a2af36'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19150101-19151231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19150101-19151231.nc' 'SHA256' '5e02222bc2cf7a781f8b77b9e753a2c7967c10dbcb8bff43de1bea851dafffe0'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19160101-19161231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19160101-19161231.nc' 'SHA256' '6d1e32fd09fb19d6c2a3979ae13186c46ac801df1bb501f920353f1dc5cc272c'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19170101-19171231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19170101-19171231.nc' 'SHA256' '0e8043439eec8133627a7ac3d90cf293992ae23c1288e1f6ee5bc4cf22530f33'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19180101-19181231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19180101-19181231.nc' 'SHA256' '56123191caf62021951fcf83f6c2a613b8e1fa03bec0c911409620d062f1a8c1'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19190101-19191231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19190101-19191231.nc' 'SHA256' '1a96ec777f0914170ea989c1ad45865bf85cfa59287cf42a9f3d00f2e471215f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19200101-19201231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19200101-19201231.nc' 'SHA256' 'd0d07715ad9c67a5197f9b2ee308792e9949abc349dd8e567217ca27df33bfc4'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19210101-19211231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19210101-19211231.nc' 'SHA256' 'baa0cf48fae7040e9677be8d37870cf7970ac3a888725a89af25de562f18ad4f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19220101-19221231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19220101-19221231.nc' 'SHA256' 'f4bb2c4e949dfab033fd161559d829e1b241d100aa2913df36edadcbacc422b7'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19230101-19231231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19230101-19231231.nc' 'SHA256' '68a58188c481cb6a473fde8853c2b980eb77d6649f9e8e24dca05dbf3edf9ac4'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19240101-19241231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19240101-19241231.nc' 'SHA256' '107c62308a9b62e5411524e89491b3d3dd7e2f96d8cff3db31d7f72dd2429b59'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19250101-19251231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19250101-19251231.nc' 'SHA256' '24901c5b919b497a65baaac6298e63782ab5f1d5c15fedcfb3d4ccaf82fbccf8'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19260101-19261231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19260101-19261231.nc' 'SHA256' '6b908a0f8713a58fa64e38d9ded820e28df4083e8da232b10bf5546536e0b913'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19270101-19271231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19270101-19271231.nc' 'SHA256' '23cd438f41f4eef81b0522b943ba8aee39fe13e48bf5f2356cdc78ff98668f25'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19280101-19281231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19280101-19281231.nc' 'SHA256' 'a58946b4213c8d974c2932925094dc76bba244cbbe27245f60b74971055fe559'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19290101-19291231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19290101-19291231.nc' 'SHA256' '0007d61ac580b0940b15cd851b2dfa2b6e61fa6bb19061ae0839e1390efc4eba'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19300101-19301231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19300101-19301231.nc' 'SHA256' 'e27a5ccaec6e6817111f67d6a5cb14e966b7d52d23acfe57cce3f229a2bd0cd2'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19310101-19311231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19310101-19311231.nc' 'SHA256' '2277c16c16e8272c274950b08e1d2a1728351f99ccaf53bf3804e87a43ca381b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19320101-19321231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19320101-19321231.nc' 'SHA256' '1ed0dc6681aee10fc070326aa0dab9379854c80619ccc5ec603470fa44fd1ba2'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19330101-19331231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19330101-19331231.nc' 'SHA256' '1639237870f847a9ff910f8f0b8aef2a9b899c3e062df4aa746079bd5593208f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19340101-19341231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19340101-19341231.nc' 'SHA256' '7359a166a795906ee3464bcb12b3c367a180ae46e9fbd9be168eaacfc04f50fb'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19350101-19351231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19350101-19351231.nc' 'SHA256' '4faf97a2e9ecf3e3dbfb0ef16ebc0b5f465919d7989340547bbdbaada75b5f62'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19360101-19361231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19360101-19361231.nc' 'SHA256' '1d6092939ff79186c89ca3e92ff4a3619cf019bbc31053272c846c3c9ab114ad'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19370101-19371231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19370101-19371231.nc' 'SHA256' '7edcf6c9604614fe18053f0a8dc92e8c759f76c3e65d57d4efc92f357377be04'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19380101-19381231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19380101-19381231.nc' 'SHA256' 'ec7a0c983fd8a50626e5c57acf55e49380e1288e12f3c6aa46f8704fce68a10e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19390101-19391231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19390101-19391231.nc' 'SHA256' '33c2a86fd64b27f3c0a314b73b0043f98bdae44f5ec5367e5f5e86de2fa371ca'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19400101-19401231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19400101-19401231.nc' 'SHA256' 'c97a663a9231bfdc7e282f88f2051490e807ec74cef8c5647215abd8f2bdfc43'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19410101-19411231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19410101-19411231.nc' 'SHA256' '37df4424f2069b568f2254e1d1b3249dfbcb1b2bec3819330c377210c50903fa'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19420101-19421231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19420101-19421231.nc' 'SHA256' '0c3357b24814dfdc5fc4d9b7e0977b915f72ce1dcf409f27750972eaceca1e0d'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19430101-19431231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19430101-19431231.nc' 'SHA256' '05be09d5323987a846800687eeb75f299c9ecef1f95527ad061b3cb0278e7277'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19440101-19441231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19440101-19441231.nc' 'SHA256' 'd5351cb5325c73f69b812ee1f7e26ad81e91fd10a49b4395f9026fa95b950fb8'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19450101-19451231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19450101-19451231.nc' 'SHA256' '736440b2bf620f6f893c8887642700ef77e3c36e4e19b059fec2fb327bcd8a00'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19460101-19461231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19460101-19461231.nc' 'SHA256' '00c834ba33627d0fdf8cff9cedc484810fb3fa95e68beae4dc069daef942a20f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19470101-19471231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19470101-19471231.nc' 'SHA256' '27f37a38f9f6895bcaf37846655435024b5d629cb7fdc4c71ed5b7973dac6448'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19480101-19481231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19480101-19481231.nc' 'SHA256' 'e0282ba3a280f868990133040100793b720e57134bd469b78fd41496f3f5d303'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19490101-19491231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19490101-19491231.nc' 'SHA256' 'ad0aac5bef39b5076d105094acc305b02f19ecb2b2fe61583742924444892c38'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19500101-19501231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19500101-19501231.nc' 'SHA256' '7dd2efc09df9ac0214ef74eedf63272112f875e75ac7c0e6c1fd5f9b36bd0b42'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19510101-19511231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19510101-19511231.nc' 'SHA256' '0352539080936233361ec91a09741182b8083afa8dcb0c348003f61ffe2bda7d'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19520101-19521231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19520101-19521231.nc' 'SHA256' '0e1c45a64690c77e439e22291f2981494cfbf11b58bb86c7d327eba4899d6241'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19530101-19531231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19530101-19531231.nc' 'SHA256' '68faf9ef1bd1a43c1e1eb3b5fb4db59fbfe7cd158b8da54e591b902f570c553b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19540101-19541231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19540101-19541231.nc' 'SHA256' 'b4d82bb1749aa574c32a07d89dcb9adad7d2434f3d1551ef99a30b47f8e9c534'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19550101-19551231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19550101-19551231.nc' 'SHA256' 'a03fe474b88056d19563ad93180b01b831dedabaa43e5b8bf2c60218aab347b1'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19560101-19561231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19560101-19561231.nc' 'SHA256' 'bfb9544ed8ac5472c3cd8f30379700ed34ffbdf6a4a7f7301fb1b0b5938a16ff'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19570101-19571231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19570101-19571231.nc' 'SHA256' '1c7132870393725e39f5098b2e0e4d58130e67c35f8c378871ec2b55af99913a'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19580101-19581231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19580101-19581231.nc' 'SHA256' 'ad70fdd3004632f4abbda09ac917e4d784109d24f8703db6cde37b8ab4c302b0'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19590101-19591231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19590101-19591231.nc' 'SHA256' 'd0cd124a45fe1cd48815df9dd991b300241ca7bdb13075d51d136b7de465d286'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19600101-19601231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19600101-19601231.nc' 'SHA256' 'de4438da1aadc5da77e51b877d866ba6e4e047cc093d7306269bcf14a3667b3c'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19610101-19611231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19610101-19611231.nc' 'SHA256' '7eb600017e7a7c784f131aaf07ec807010c9ec88dc9b22822f782598d25a47a7'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19620101-19621231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19620101-19621231.nc' 'SHA256' '529dfbe1ea6162d61cef2ab9cf2317ccb6c327f907dd80436c3dd309eedc2c58'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19630101-19631231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19630101-19631231.nc' 'SHA256' '22158014565f54b3a282f2d3bbe0b4757b488ca442d0e3df0559e907686d30ba'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19640101-19641231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19640101-19641231.nc' 'SHA256' '8c55f2b0363b7c8f9e6bdeca886864985ba530df57dc8c9f8daddabb81646587'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19650101-19651231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19650101-19651231.nc' 'SHA256' '9106fb7312aec943c8142dd33b50fbc67d2a2fe3949775777eb2456b28ec8d6c'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19660101-19661231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19660101-19661231.nc' 'SHA256' 'a3925fcdfda5f0ff15b180bc106e0cbfbef5376684258ba363e9b677c515b463'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19670101-19671231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19670101-19671231.nc' 'SHA256' 'dcd12795fd366761ec9eaadd0ae81337d68fe220df23c5d30a9d926821630d04'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19680101-19681231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19680101-19681231.nc' 'SHA256' '152fc33d59491be9fc34ab619836ff03e591da2343ab71087f6c2adffd17d24b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19690101-19691231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19690101-19691231.nc' 'SHA256' '4b234cc05407863caf7318713a443bd15c5f5c614adfa015228c0112ac229697'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19700101-19701231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19700101-19701231.nc' 'SHA256' '2ee0b4e26888df18682c2c67827c063e1885d40def6f2c4e782a9dd300dbdd42'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19710101-19711231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19710101-19711231.nc' 'SHA256' 'ace95aebef1f6977d8339281204d950b72d0e80e34f67db0a2deddcb7cf7de4d'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19720101-19721231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19720101-19721231.nc' 'SHA256' 'd5e31db6c9c2339642b7e712cf12dc7bae63e6a9f84c6518667acf0850af819b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19730101-19731231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19730101-19731231.nc' 'SHA256' 'a1a3a960a24ba06ff1c358aa84f4f5cea3696752aba5f15b181ebc10746fc3c5'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19740101-19741231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19740101-19741231.nc' 'SHA256' '6131cda84cc75419bb9b770a12abe60067fbe55a6852d9e37678c9364bc6304b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19750101-19751231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19750101-19751231.nc' 'SHA256' 'b007d48394ef5746424f85e451e5acc94ec265c4ed2d51d0b9d6871447a466c6'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19760101-19761231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19760101-19761231.nc' 'SHA256' '99bb7ce26b2dcc57012aba79a8e56454352ba0f2bf14a35805095b08c071d870'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19770101-19771231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19770101-19771231.nc' 'SHA256' '00fe4cc684dc9ee4107bb7741ea3bb1dc8196d59ca476404d5c53e02c32d28a5'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19780101-19781231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19780101-19781231.nc' 'SHA256' '39ce2d212d126f3346b4f881eea57f7328103a03e7272223a981668723aeb262'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19790101-19791231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19790101-19791231.nc' 'SHA256' '8115855e58f041d061c070227319ddbadcfd7017849da678a8502ac2fc7fcfd0'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19800101-19801231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19800101-19801231.nc' 'SHA256' '75eb8e0215ce491c3717fcade2d3d8475b7e079536b009c6ca36150f6cd91e82'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19810101-19811231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19810101-19811231.nc' 'SHA256' 'a5b7ebc9c67bfa8b7dcc8ce5d64dd4ed19d039c1faaae84133d9f29759c42652'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19820101-19821231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19820101-19821231.nc' 'SHA256' '3bf3c621892a7e4b6fc463be28027165125e1189501a2457c344879953b77a24'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19830101-19831231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19830101-19831231.nc' 'SHA256' 'f2a032907f05ca3f08b0a55f26912217cc2dea5240a6c330481332e7712b749d'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19840101-19841231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19840101-19841231.nc' 'SHA256' 'd9de2c26a17a9919cd36326ffc1d84529699815f36b582d4a939d79e649130ff'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19850101-19851231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19850101-19851231.nc' 'SHA256' '234c241646870379b3f554b5f229fad980e6e8e1c4ef3836af6ab8c4676e0e70'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19860101-19861231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19860101-19861231.nc' 'SHA256' 'e65adba70c2df1e40c872f2cee530c4612e535ac3020b44b28a4c3349e143d48'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19870101-19871231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19870101-19871231.nc' 'SHA256' 'cf8a83ab25b3eb9d455af45affc4d597cadcfd0bbc9df0dc9468638dd40c8bbc'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19880101-19881231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19880101-19881231.nc' 'SHA256' '8a6ec3f44e0eaab9ba0dd7600be6899d97133fdaace640337b22a7021828dc50'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19890101-19891231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19890101-19891231.nc' 'SHA256' '40734139c069346fe8ee0717369a0e9cd63d31881f76140487664b36d7613f30'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19900101-19901231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19900101-19901231.nc' 'SHA256' '0b6cae5aca89df5e271705478e6fdc9e9ab587d5117d0b01280e9eeb8a7fff92'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19910101-19911231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19910101-19911231.nc' 'SHA256' 'ffaa28c7c01bb4326b6324427b7d800077a22298f4f4a007c4e9a2571b1cc8c0'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19920101-19921231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19920101-19921231.nc' 'SHA256' 'ef73a7958b43abe154fdfa5107dee3c2b5c627aaf8bbd6f702640212549b5734'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19930101-19931231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19930101-19931231.nc' 'SHA256' 'f5f077e14ab87c1e7bb6231e8831b90cdb4b866a7d54979ceb2cb9ca0fa61e6d'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19940101-19941231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19940101-19941231.nc' 'SHA256' '64be4032e7785a6fd3bfa3b9302cfad06690cc6a9ccb39cee39fe0879f431d80'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19950101-19951231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19950101-19951231.nc' 'SHA256' 'bfaf164fea23daf04ca73f8f268f0bbc952714dac8a882b4fe3f2a66c1a5b7ab'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19960101-19961231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19960101-19961231.nc' 'SHA256' '39428a8677c16aa8e87941971f4445506e1c509655dfb6dadf8e578ca1bd98ff'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19970101-19971231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19970101-19971231.nc' 'SHA256' '09492fe003d9b08bfb034b32b801004173ce0d873924ce9abb3938a632a0995e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19980101-19981231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19980101-19981231.nc' 'SHA256' '272fe35040a375e0f66e8026d6a095e95af45a76fac8c47c46eaded6ccc4741e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19990101-19991231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_19990101-19991231.nc' 'SHA256' '57487237934984d6cd32b25e3051a055427a728d7a9c77caca44fd9335c5aa1a'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20000101-20001231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20000101-20001231.nc' 'SHA256' '49c83cbfdb6ddb65686a9b3663c324a1c0d0358db160b9df958454b598def019'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20010101-20011231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20010101-20011231.nc' 'SHA256' 'eea58b0a65233c8afd1a6879881f61f85ac210affb9cc495a0c4a4b55706dd8a'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20020101-20021231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20020101-20021231.nc' 'SHA256' 'd22dec4e243d6c624ccd8df2aec69c44d5b81b0048ef03bc54f3f0c26f00b2f3'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20030101-20031231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20030101-20031231.nc' 'SHA256' '6f505a7a387b013456816cb917c755a7e46ab7862f97552a8fc57f2edc4d5ba0'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20040101-20041231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20040101-20041231.nc' 'SHA256' 'e63083f464b7829fca2f74963172114f204e9a66381746a272d375f1d15f6f3f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20050101-20051231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20050101-20051231.nc' 'SHA256' '3275783a5bffd1542eda0b74b1399cd5f0c87a23eb8e8a8a2b8fd0e2ee48f75f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20060101-20061231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20060101-20061231.nc' 'SHA256' 'ce42d80a9804e623bf6d26d99f82d4b151c1d3569637353d2ecdcc246893fc7e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20070101-20071231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20070101-20071231.nc' 'SHA256' '3f4efc13407bbd60b80f15461c3c8e229c0e6f282d2b3bc2620e6554f28b5809'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20080101-20081231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20080101-20081231.nc' 'SHA256' '97b5ce866620c24cab2de6733026ccde0b8b5000ab957f727f6f7cf9c075737f'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20090101-20091231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20090101-20091231.nc' 'SHA256' '1c5ed80869298c002f4ac7f90cbc5ba0d59085b26ef425d040d2d5e6074e43e4'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20100101-20101231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20100101-20101231.nc' 'SHA256' 'd9beb6c76a6d07e0522a03c11f8cb40acdb7b6c78d4df09f1977f028f8e6b0c4'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20110101-20111231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20110101-20111231.nc' 'SHA256' 'c2d964eee5f149d641a7c17bbee3866ce69b3a0a697ce93843f56aaaf7a0e052'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20120101-20121231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20120101-20121231.nc' 'SHA256' 'edb86038052d436787bbd92860fb5391f3504b2f73dc57f3a09f31574f6f914b'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20130101-20131231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20130101-20131231.nc' 'SHA256' '863d828e0f93ee5727b124ad377f1311694fe52adec701b53b39afa892c7c15e'
'vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20140101-20141231.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/CMIP/AWI/AWI-ESM-1-1-LR/historical/r1i1p1f1/day/vas/gn/v20200212/vas_day_AWI-ESM-1-1-LR_historical_r1i1p1f1_gn_20140101-20141231.nc' 'SHA256' '952fe246223e323526c5cb16e258b374434b9c56de884540f2d6069e558838da'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 165 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
