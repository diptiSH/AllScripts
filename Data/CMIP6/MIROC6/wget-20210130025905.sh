#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-node.llnl.gov - 2021/01/30 02:59:05
# Search URL: https://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.MIROC.MIROC6.historical.r1i1p1f1.day.zg.gn.v20191016|esgf-data1.llnl.gov
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.MIROC.MIROC6.historical.r1i1p1f1.day.zg.gn.v20191016|esgf-data1.llnl.gov'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'zg_day_MIROC6_historical_r1i1p1f1_gn_18500101-18501231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18500101-18501231.nc' 'SHA256' '14dca254e48502ea1ecc12a2a36f2230b26adb7f6cf0b5ef4bdbb913cc603dc6'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18510101-18511231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18510101-18511231.nc' 'SHA256' 'fc9ccafc52bca305586d5d26fa3cbddf8df3c62f51bc97ad47e220d37f7ffa3c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18520101-18521231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18520101-18521231.nc' 'SHA256' 'b08243f0ba216431b913a7dfea044c4b94a81b4e04de5d8636cd68e03f594443'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18530101-18531231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18530101-18531231.nc' 'SHA256' 'dc80832f300649adc285c332fe2f510b96710eb760746f53abbd680f8d37031c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18540101-18541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18540101-18541231.nc' 'SHA256' 'c37f6babcb7dc5e1f908e9c357cc9fc43db95b98ab0cca2187665c288cbc0152'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18550101-18551231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18550101-18551231.nc' 'SHA256' '99e1273ebc27d446feffb7343161e91adc8f616cbc27199d404b62dd35ee6199'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18560101-18561231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18560101-18561231.nc' 'SHA256' 'e583239a4f31c4802d32426eb18f278fc6360cab5f0e5a5b6d6bbf5f17b4517e'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18570101-18571231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18570101-18571231.nc' 'SHA256' '2a2eca1afbb021b40955466daa0fe49a937270437632a084b5d79bcab969c3d6'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18580101-18581231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18580101-18581231.nc' 'SHA256' '7b905aaa8ce3a1dbd4fc584e814fbcae8a87a0aa0172485933ac09d22421abcd'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18590101-18591231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18590101-18591231.nc' 'SHA256' 'dc3e3cdceb3b3b907095ab136a886a966b06d9d30853fe5604b1d3258de4655b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18600101-18601231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18600101-18601231.nc' 'SHA256' 'c8e36e0a8269c8f990390e6dd59aae67417417043ab2bc95287f8cb123a8a86c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18610101-18611231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18610101-18611231.nc' 'SHA256' '8eb584c02f17d03dac03b4fe03935eb2191e1f6d88f8ce23ccf59b10681753a9'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18620101-18621231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18620101-18621231.nc' 'SHA256' 'd740964385c6330a4cd73d78dabd40ea57174ec1b1d509343c6860bbbe21eb60'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18630101-18631231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18630101-18631231.nc' 'SHA256' 'c0829f76ef96a7b2097ed155c836a70d988bc5c35e2a31264dbe1490a5005d2c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18640101-18641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18640101-18641231.nc' 'SHA256' 'de56d944d53893d0a25ffe1ce276b32a4ee9acaa52d93c76f8ec107e15c9c907'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18650101-18651231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18650101-18651231.nc' 'SHA256' '57d641986c28fc34388febae219d167551ed105754459efc1628d6a23bcaa550'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18660101-18661231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18660101-18661231.nc' 'SHA256' 'e1b168001e6dae813b12cf9c1c92e66dc3de5ba5f36f1b158556e2768739e1ac'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18670101-18671231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18670101-18671231.nc' 'SHA256' '4519d203f791821bef1f28af66b8a1fa0ee09444298a0607627f836d1909bc17'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18680101-18681231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18680101-18681231.nc' 'SHA256' 'cd617bba0cc6c63160659ab60745f224d500824e50a5db96de8510ba4dd5f6a1'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18690101-18691231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18690101-18691231.nc' 'SHA256' '55f0891d69d8f1428588aac755228aea73e4b7bd01969b76c2665eccf69b1deb'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18700101-18701231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18700101-18701231.nc' 'SHA256' '2344dcf714c3eb8a3765f4f0802fec9d111cb0e81d8efbee85d5a48cbda0ed15'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18710101-18711231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18710101-18711231.nc' 'SHA256' 'd910ec61a29c827854ed3683bcf0c5c0db54252935eb10829484a9f463fb53c6'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18720101-18721231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18720101-18721231.nc' 'SHA256' 'a7e3ef74529ecf5377eb1d2d06d8a15a9a706de6b98b76195f9b3e593ec52519'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18730101-18731231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18730101-18731231.nc' 'SHA256' 'd3e4c90442574d770c4b5de6704ff56144665f728d44b1e66bae28aa1519125d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18740101-18741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18740101-18741231.nc' 'SHA256' 'e3f9a3716b138ac80dfa6865ae616e22e03133f6937567ebbe6260c70fb84c4d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18750101-18751231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18750101-18751231.nc' 'SHA256' '64c1cf5bef81f789b730a7582a9703c32776c2e6e9000d42bd045c37d2b01bca'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18760101-18761231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18760101-18761231.nc' 'SHA256' '8a233637b8b986f8a080294bf484f0500cd95aaffd1c21299c71161a18a73756'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18770101-18771231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18770101-18771231.nc' 'SHA256' 'd75a1b9b427120f2808783a4301001d39b6b2c882b6a31b52613172cf375e92f'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18780101-18781231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18780101-18781231.nc' 'SHA256' '9bf240cb58827c1d6084c6f25f938ef94db0b3ebe3ad248feca20e29f75e2fe0'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18790101-18791231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18790101-18791231.nc' 'SHA256' 'f310ccba6bfa59691c07f8041ef39114f1a16b4744108cece215c3af7926474a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18800101-18801231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18800101-18801231.nc' 'SHA256' '1a563f55c8aafd793b8bf7080a15c5ba720614332318b2a3404bacb6e7f44bd8'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18810101-18811231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18810101-18811231.nc' 'SHA256' '42971589ae19d3986de44b828db262b01da02883e182dc42e2d6d70773555604'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18820101-18821231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18820101-18821231.nc' 'SHA256' '630efcce6a346c30e033876e921fb03cb1b6a1d990880addb4924ae083775405'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18830101-18831231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18830101-18831231.nc' 'SHA256' 'b0f1997c7ee4f652da6ab17cb86c5378aa1c3ee1701caa7ac7952902a9071897'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18840101-18841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18840101-18841231.nc' 'SHA256' 'ddaec1c1cc682053e0d73ab8c795913ce54d052502935e1354b0416ae84daff7'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18850101-18851231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18850101-18851231.nc' 'SHA256' '3a349ed86dce042cb924f77ba0287d5b7900213d5c5c596dcf3cec689b0c3613'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18860101-18861231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18860101-18861231.nc' 'SHA256' '8e3264cdaf39e88a3cd13e53b0bb9b8b4d5c0261795a626ea67dc8cb8760cd59'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18870101-18871231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18870101-18871231.nc' 'SHA256' '11c6b6c94f5963e7c82708b9abd19420f0536422b268dfa145e49266a0b08a0a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18880101-18881231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18880101-18881231.nc' 'SHA256' 'a86dc943e94629f4198df7ed83e1dd1d5ae3d313ddf9140955780c853b17dbbe'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18890101-18891231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18890101-18891231.nc' 'SHA256' 'ac865142dcd002f53ec482238e46862d854fbef69fa92cddef12f5ab158033b1'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18900101-18901231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18900101-18901231.nc' 'SHA256' '9cb1fa173f2e5990d8e78dbf383d07b5acef6a19bafb5f7bc1cd3f94c48cdc4d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18910101-18911231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18910101-18911231.nc' 'SHA256' '79341f69638af5fa0cf5a4b2ac580255e3a97bb59a87f6218e8466e5ecd2645e'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18920101-18921231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18920101-18921231.nc' 'SHA256' '469083e5d08d36a8d724f2a7420ac81d034f0385ee66703c0021615e3062ff09'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18930101-18931231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18930101-18931231.nc' 'SHA256' '139cca39ee7b2e6f07c53b032af826983e5aaf95652509daff67432ceee64b96'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18940101-18941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18940101-18941231.nc' 'SHA256' '8be9fa7c47cbc0e8e28a198310f52722c923d0ad2a27a4ee6312c551b832fa1e'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18950101-18951231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18950101-18951231.nc' 'SHA256' '5f9613606d7d382045f8610cf117358e921ffcd9f6d02ac79a5bf47e911b5eeb'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18960101-18961231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18960101-18961231.nc' 'SHA256' 'eec48bc09330147eae78ba1b3b53915e76b563c57a1151492a2a07a2ed22b1ff'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18970101-18971231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18970101-18971231.nc' 'SHA256' '77edfc98486fdb9e3dc1d450db19b816ce948b2ec44337ce4b34637063dd4688'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18980101-18981231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18980101-18981231.nc' 'SHA256' '5881fb4b7920f0449860b62ab441b7b914de7fbd03ccc7ce58841aaa98f334eb'
'zg_day_MIROC6_historical_r1i1p1f1_gn_18990101-18991231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_18990101-18991231.nc' 'SHA256' 'd4cfbc36652c138a532264297c75ac9c95bbd6c5f14f7ad0ec6ee60e8843eb36'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19000101-19001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19000101-19001231.nc' 'SHA256' '9099cf2b06d531bb98f42e21c63486443f5e1e54372ac1489e83ac61fa4d211b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19010101-19011231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19010101-19011231.nc' 'SHA256' '6d3f07acfef8320a65905da0c7280903a2ea6776e5aae4614665b94fe6560726'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19020101-19021231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19020101-19021231.nc' 'SHA256' 'ec639e30d0ab584b46f2a74dc30039c6e36750ff44e962510312f1d059c3a4c2'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19030101-19031231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19030101-19031231.nc' 'SHA256' '12d89c962553cfed1346728818f18950c60c387aa7aa89466ce6bf77411dde83'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19040101-19041231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19040101-19041231.nc' 'SHA256' 'aa158de5135b0936f1033101738a864ad8a204285cd0ed04c8c091fe0e2574f7'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19050101-19051231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19050101-19051231.nc' 'SHA256' '02278c6da7eaf79b1df0eabc5af33587984769eec66d9263dc943ef6c60f1b70'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19060101-19061231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19060101-19061231.nc' 'SHA256' '0507ff309c252f96e92d2625ed1d22828aedca7185ac10dd7f95a34b1beeb830'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19070101-19071231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19070101-19071231.nc' 'SHA256' '08168f055fa48aa295f4c99cc14da86b9dae98f7d3fb7ee5e5ff8687383c1c2d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19080101-19081231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19080101-19081231.nc' 'SHA256' '27eaf724b98e8c0f4bec10ff613540d86aa53abb19c553bdb86aeea7b6b33e36'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19090101-19091231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19090101-19091231.nc' 'SHA256' '794bccac44d7d43ffd59704a7ff66ae49c830ec69624a6a09dd9dca805e82213'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19100101-19101231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19100101-19101231.nc' 'SHA256' '2d156b82a5b3851626dc8900191ca3ac5d1953d6a33675ddd9d5e9d422933144'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19110101-19111231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19110101-19111231.nc' 'SHA256' '806643ef243d8b691b4439e14c8c6c53e9cde9617c2c7beab1f8a8a082cf76ae'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19120101-19121231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19120101-19121231.nc' 'SHA256' '6a0d25fb4715c6198cbe4a246d6b0d03940034c5b51c3f769c7104f636615613'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19130101-19131231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19130101-19131231.nc' 'SHA256' 'c2dfc9f0e885c3d9caee189c73e8054a7477ec9f5ed08988123f9fa7a72cc09a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19140101-19141231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19140101-19141231.nc' 'SHA256' '3999428821c54a2307362c02879e4bf45c2364863e1be63243ca9202cc3b7988'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19150101-19151231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19150101-19151231.nc' 'SHA256' '0823d2bc1dc817f360675e2d81f1fc3a31be9bb27b0bed43e0b49a1888d7054f'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19160101-19161231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19160101-19161231.nc' 'SHA256' 'f0efc249c2f3ad0966dbb8c02ca0b30226771dce452dc7ffeb3d1c369bc29552'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19170101-19171231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19170101-19171231.nc' 'SHA256' '461e6b34060fd4d148a35c363e32d059e67466d9f1a35073b12d10c439a25025'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19180101-19181231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19180101-19181231.nc' 'SHA256' 'b61a84f3d82258ec34ad5c461412a80337c7f8c1b4c623546b89a9e727729fd6'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19190101-19191231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19190101-19191231.nc' 'SHA256' '565cc6908c66eb2883b93019d1c6d20f070595b67aa47c39019f501d60adaf7d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19200101-19201231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19200101-19201231.nc' 'SHA256' '97a720be365ec45876c773b94321dfb1b1a93dec1b6cac4c3b9ec662876fbfe4'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19210101-19211231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19210101-19211231.nc' 'SHA256' '3f6348ce1dcd6c90ad01655f6d88158591d8e8bef44976a86018c8083a901769'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19220101-19221231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19220101-19221231.nc' 'SHA256' '31cc0a8a214cf0413e821f1cc34dbed40550461c20fc16e5c1e4d89a7c615e1f'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19230101-19231231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19230101-19231231.nc' 'SHA256' 'e203a0605bdd8e72e3300808be28b8477d91e74d8749b88d3ee8327915741e83'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19240101-19241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19240101-19241231.nc' 'SHA256' 'ee44ac09e75ae87d0d3d80d6b1de05f209c47ec04d77931cb3f08bea994e83fc'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19250101-19251231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19250101-19251231.nc' 'SHA256' '8402096daf17336c927255821ec56c7fbe227e0f8938e8f7ce668e17859ffaae'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19260101-19261231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19260101-19261231.nc' 'SHA256' '037547be3929c4af37ba07b394d98787a106bfb063089225f6ca2c04de36229c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19270101-19271231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19270101-19271231.nc' 'SHA256' '3af384ce4be379fd102c9a107600b79696ba13f28027c92e7453ac2aebd70bd1'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19280101-19281231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19280101-19281231.nc' 'SHA256' '48e2033df695f9dda7cbb91131c90ecd9b1706d49c2a3976c4ba839daf0ed183'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19290101-19291231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19290101-19291231.nc' 'SHA256' 'd20734f740f30385bf8c30bee8c04a5f7f2b64cc222273d91ca6076a026f8bfa'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19300101-19301231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19300101-19301231.nc' 'SHA256' 'c9600cc3b1e427b76809e5246c95ff6d107ea39bc64eea7959b0066428a3cd7f'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19310101-19311231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19310101-19311231.nc' 'SHA256' '13f09b8421297f36b5ce47bace7b286becd003639c1590a612cd85d0eb1adf16'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19320101-19321231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19320101-19321231.nc' 'SHA256' '8e6c86b416f6ecd5acc2bacf01b57f687b377b46dbd1c36eb593a24353e357ff'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19330101-19331231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19330101-19331231.nc' 'SHA256' '29769efd53d00b2f3c858870089bcd6c31969d5f548b48100adb60e7d4f227e9'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19340101-19341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19340101-19341231.nc' 'SHA256' '493c56b31c10b83f797c2ad1db8920a86ecbc9e1e7342075c8e3c6bb0fb16bd4'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19350101-19351231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19350101-19351231.nc' 'SHA256' 'a26d9b2825a382ad81b4b07b770cb49b06601972d029fc362082ba7040b8f2b3'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19360101-19361231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19360101-19361231.nc' 'SHA256' 'aca51003ac71f61d6f7f1ec0e86178416862b66df1143cee735192a677819cfd'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19370101-19371231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19370101-19371231.nc' 'SHA256' '9d3bb05189924c7a508bb0366da174376f2b99c98e71a24f094202e1409eb28b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19380101-19381231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19380101-19381231.nc' 'SHA256' '3592abee5f03399c4a85be50e14aea79794c86d42d31e60ab7844d54988b08d1'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19390101-19391231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19390101-19391231.nc' 'SHA256' '3ecfcd2621736eb52949164a99f6b1a92dd5a8349765e67e4f6357543f09da14'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19400101-19401231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19400101-19401231.nc' 'SHA256' '90cf3c6bbbb62dea7907fd8102388698a3797f2fab7e0a3effe033696e059149'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19410101-19411231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19410101-19411231.nc' 'SHA256' '766dedef542c01179202139ab6c7ee8b4b90d69662b22bd08e3d8eb779a3919d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19420101-19421231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19420101-19421231.nc' 'SHA256' '90f3847ad9ac5b5689de89a04aa00d22027df0bcd71ce551fd50c7a160dd0ec7'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19430101-19431231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19430101-19431231.nc' 'SHA256' '39664dc8e63168606c2fe4d5af7e81ccd5f831e585c924e9dd67c23454a6b26d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19440101-19441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19440101-19441231.nc' 'SHA256' '056ff3aa4ffca1e1eeb011a4d69b3c1434cfe20a8bc31360c036ff6b818128bb'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19450101-19451231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19450101-19451231.nc' 'SHA256' 'c2cfc584fb9216ee81b9d8ca491f97bb5cebd966d7f41efa5597cf88f4596cc1'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19460101-19461231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19460101-19461231.nc' 'SHA256' '4cff43283c74c98e3db60cbbe508dc68414a2da8f95994fec1945dda56b8686c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19470101-19471231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19470101-19471231.nc' 'SHA256' 'c103e24fd632396405e36ecc9d238634f62ad89ae45f1005ddd54294c4f552a7'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19480101-19481231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19480101-19481231.nc' 'SHA256' '850c56b01fd8189ead0eb3227e26675982ad2e5af7067abceb9df07072a4074b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19490101-19491231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19490101-19491231.nc' 'SHA256' '88861d708d6f47ebbcc1f099c94022ae27281fba3c5958ed705dc3b343152040'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19500101-19501231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19500101-19501231.nc' 'SHA256' 'e135d3377407b10fe4b5757b8c90840a328345a450cc4bc7f315d632d447b309'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19510101-19511231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19510101-19511231.nc' 'SHA256' '96f2e80e5e06199f035a22fd80c0570232c137a9bea87711304675aaaebd453a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19520101-19521231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19520101-19521231.nc' 'SHA256' '6bb24dd7c63e09b5b09abcfb12c5a40b89ad3950025bda683e344ac7759c5563'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19530101-19531231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19530101-19531231.nc' 'SHA256' 'a37002e9adfb6e668fa121aabdf1e21ed622bd895ea385f3a1fc47971e9db805'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19540101-19541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19540101-19541231.nc' 'SHA256' '42700bea8ec5a0081bd953548e79b06febd528288afc8c95266df96b918b170b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19550101-19551231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19550101-19551231.nc' 'SHA256' '480343b3a89726bffb4d684ba600dae85aed4d3335af918421c47ad5a15395c6'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19560101-19561231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19560101-19561231.nc' 'SHA256' 'cd790f14f845a3d778dc1717a0e208db8a0dca0a115aaf0602bb43ad3c139140'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19570101-19571231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19570101-19571231.nc' 'SHA256' '284c8231e8fa262993667de551a0de2be84cb26c77b68fd8055f44807051d5fb'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19580101-19581231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19580101-19581231.nc' 'SHA256' 'bf2af45c32e63348eef52f20092a2764b0a8132f80f908f7255b11993c798d68'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19590101-19591231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19590101-19591231.nc' 'SHA256' '9a6601afd6a81470057d5e14838b6beabc9ed757ddf0281b6bd4ec80339a6348'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19600101-19601231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19600101-19601231.nc' 'SHA256' '9cde822070582a4ec43308f3dd8a7ea9c05a413e362aa8381e62113652652c82'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19610101-19611231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19610101-19611231.nc' 'SHA256' 'd3c6480733438195f0796a85f0b547503253f95d8c1fc935313ac8e96b71bddc'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19620101-19621231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19620101-19621231.nc' 'SHA256' 'd30c5d514b37e0d460e31f4bdf84f41a4d8f721bfb21f446a2dfd4126c582195'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19630101-19631231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19630101-19631231.nc' 'SHA256' '4b53d637ea551f572de9603439dc77d06cb0ecd66c378a0d36b980d979a893b2'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19640101-19641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19640101-19641231.nc' 'SHA256' '61c3a98c49ee6d3e4366865208965828964be3078dee575044d5246b4c581a3f'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19650101-19651231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19650101-19651231.nc' 'SHA256' 'b7bd7758ebb2678b919aea509f40f0268740cc1594ec4b076a579a50adf203f1'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19660101-19661231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19660101-19661231.nc' 'SHA256' '83e756231163a9f59abf86457fc5de1f52ec49f6508a33291ebef0cb878cf24c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19670101-19671231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19670101-19671231.nc' 'SHA256' '08571c11a77f19f49babe81025150ce6be9ad1f01aade660d2dc6822d7f6458b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19680101-19681231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19680101-19681231.nc' 'SHA256' 'c3b932eaf71c527d073f2d97fad20936e45d0547b49e3f853ff7eae907e9cd7e'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19690101-19691231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19690101-19691231.nc' 'SHA256' 'd644f913905e135432dfbf8f0185a8e7756ce66bb8639cf90fbf75bcceb06ecb'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19700101-19701231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19700101-19701231.nc' 'SHA256' '451cb5fcafc8eef6f534d7b831f8ea83efe6be2bf38d9da6e7fff9dfffd984e5'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19710101-19711231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19710101-19711231.nc' 'SHA256' '79daaacd3289d5c4d5dfbeb98eb65542f2062a54798757249b2372a339ea9763'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19720101-19721231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19720101-19721231.nc' 'SHA256' '7d20379ac7528a5f9d3f1ce31358f81bb8eb87849475f0e503dddfbca46809e6'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19730101-19731231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19730101-19731231.nc' 'SHA256' '5ef993be638aa3efbf848f0e2d89b78ac128f1437ab02b843206a096a8925a17'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19740101-19741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19740101-19741231.nc' 'SHA256' '196282895057a3877b5593f7772f2e31f775e8f10405e237ba5a2a384381d43b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19750101-19751231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19750101-19751231.nc' 'SHA256' 'e7835962b3e380fc6bbcee0074197106ed0699e76f0d826cf051764370bab57d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19760101-19761231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19760101-19761231.nc' 'SHA256' 'de26812cdd25146496e7bfef5880e5c6045f3b408735f8699d890c248a653a9c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19770101-19771231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19770101-19771231.nc' 'SHA256' 'ed7901bf3bfc1b2c0ac3ace6cb35d0b772b3a5a9517222c5f1257f49aec69323'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19780101-19781231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19780101-19781231.nc' 'SHA256' '92e4e2271a1c3262de7ee02e1c7c07b674cd7b535e0ad19efc1780a83358fd69'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19790101-19791231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19790101-19791231.nc' 'SHA256' 'c9478f88079a9a22905a81c5f4fe847b291daa6713e9f674807ecfb6fe5cf00b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19800101-19801231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19800101-19801231.nc' 'SHA256' '29c10acef89469af20250d46dd82f7fd7ee41c22118d00d92995a06f637dec39'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19810101-19811231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19810101-19811231.nc' 'SHA256' '53ce7a20488e856b891efcea6729dd96945ae03b3a97d695810687c8d541f2b0'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19820101-19821231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19820101-19821231.nc' 'SHA256' '9932103391d7af5fcaad7c6b9dc733d2e1807899b0b2d9c375657f53f184102e'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19830101-19831231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19830101-19831231.nc' 'SHA256' 'b040a851f8d0dfd55261f10e88616502b6dc6e443ce453b958ac6724b27c65fb'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19840101-19841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19840101-19841231.nc' 'SHA256' 'b4132e3ef7c8cae102075c26201eef9d26893b64e036dad32d59e9655731df3f'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19850101-19851231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19850101-19851231.nc' 'SHA256' '744c56312c27a9855b8d6df8daf51b9fac4f65360d80100e1bcfdf2d00e24d15'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19860101-19861231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19860101-19861231.nc' 'SHA256' '954c20aa46b05aa7870d210f548e09ed9bc78a7716476d29f048fb4b118656ac'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19870101-19871231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19870101-19871231.nc' 'SHA256' '8005f87e31681da8cd5e45248b04c2c0eba9b10297064d43e21a925f61a36a88'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19880101-19881231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19880101-19881231.nc' 'SHA256' 'c54748d5cfe30247c1de61cd0976031797ff0b2e60cc19fcbb21d30595208605'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19890101-19891231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19890101-19891231.nc' 'SHA256' '0b492f9e2c9014539c2e987e969abb5fa9bf66df1b107d12db3a72b620134f3e'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19900101-19901231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19900101-19901231.nc' 'SHA256' 'c7a064210a2883b3a7c6dd93a41b2cfda80f89501282faf96a37dcd2a566b80b'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19910101-19911231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19910101-19911231.nc' 'SHA256' '4f5f33a24e7054b05fc6cd853b35988718c1caaafbf79f6c24f7b8c37622bcfd'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19920101-19921231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19920101-19921231.nc' 'SHA256' '8755e2af5a951aff5278b8b87d49344f829cb3b0a86cf68056f35a045ba092ce'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19930101-19931231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19930101-19931231.nc' 'SHA256' '87e0c411ee93523413eabae7c13548a09595742fd3d844b517d27de2c98a4902'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19940101-19941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19940101-19941231.nc' 'SHA256' '4042e9ae25b2a2cc65807e6916ac401d09affef5f7adec78f1e4cfa906c2d590'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19950101-19951231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19950101-19951231.nc' 'SHA256' '73dc3e85b8d1b941960783a9795b106ce04cb8cf2e9a483f59fdeb6d525c5f11'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19960101-19961231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19960101-19961231.nc' 'SHA256' 'd31e62fc1108684c967540351f0c9d5c5c7d5364cf25696996fc3cebfaaa313e'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19970101-19971231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19970101-19971231.nc' 'SHA256' '5b6d7e0c244026e122ec87c7f7f95f6646895ebf3082fdcebedba20efa0e071a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19980101-19981231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19980101-19981231.nc' 'SHA256' '5fd81c9f152a24ce7526082ecdbf8a0c90340e95bdb32e9621a950b377a201bd'
'zg_day_MIROC6_historical_r1i1p1f1_gn_19990101-19991231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_19990101-19991231.nc' 'SHA256' '6dc61ee3beaf4c2f4477ac583128a7acb5856befa14370537c725be66c28d997'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20000101-20001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20000101-20001231.nc' 'SHA256' 'bcfcfe0f445cd844223916a0ac93c3638e72d1db76091bf4fcea6b5df442171a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20010101-20011231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20010101-20011231.nc' 'SHA256' '26981bb62b1db98cf17ae3b3d7c657d590877f5dbd9b780427a8a3435bc9d170'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20020101-20021231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20020101-20021231.nc' 'SHA256' 'adeac26f135f256c9ccf3a49f196d1f622f934713719bad1d798ba7300b9e6bd'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20030101-20031231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20030101-20031231.nc' 'SHA256' '0b207c7297a7d50890f6adf7b26cad11afeb21441a8784d79a0b38caad57687a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20040101-20041231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20040101-20041231.nc' 'SHA256' '8563a09792839fdde2de53898cd8c256d7d71ac7a6f4227888da644b1fd4bd1d'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20050101-20051231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20050101-20051231.nc' 'SHA256' '9003e658448d63eb142fcd03fdee373d0231b437a343f3cf8b0a22f61e250192'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20060101-20061231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20060101-20061231.nc' 'SHA256' 'ab64429049596b90776058917f81e9695a1ab5c72ea30117363dece849440974'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20070101-20071231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20070101-20071231.nc' 'SHA256' '76b848b832c45089a80e5d79a9dc235e98243d1451d369e379ef800d16a6f678'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20080101-20081231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20080101-20081231.nc' 'SHA256' '41539d363752b407be703f6dc11a1a1170f929c3365f9739c833f7ff304603bd'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20090101-20091231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20090101-20091231.nc' 'SHA256' '7da8d1d06ad23129d0451fa178209b05b45dce6a4e41a9799e4ad96d5dabf87c'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20100101-20101231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20100101-20101231.nc' 'SHA256' '3e3572db22d7952b4d504b2d7b5f1725b5732e5ac1d6a59136a0619de0fd6d15'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20110101-20111231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20110101-20111231.nc' 'SHA256' '8f213b3c343bbf40ab4ec4e8400367997bc2813c3108abfea4c0dfde8733953a'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20120101-20121231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20120101-20121231.nc' 'SHA256' 'e1cf9ba8ed6bcb145ee7195de63f83b8470fdf46e65a88172ed8675559576ba0'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20130101-20131231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20130101-20131231.nc' 'SHA256' '9aebb051d9a73ecc84ecc7fbd4646c502b0936940fdbbed288ad9c615d4752fc'
'zg_day_MIROC6_historical_r1i1p1f1_gn_20140101-20141231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/zg/gn/v20191016/zg_day_MIROC6_historical_r1i1p1f1_gn_20140101-20141231.nc' 'SHA256' '2cc1bdf9b3cb48f16781e64fe7d8c49570aaff150152a770abac4ce749ccee07'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 165 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
