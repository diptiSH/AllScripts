#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-node.llnl.gov - 2021/03/11 02:23:59
# Search URL: http://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.MIROC.MIROC6.historical.r1i1p1f1.day.ua.gn.v20191016|esgf-data2.diasjp.net
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.MIROC.MIROC6.historical.r1i1p1f1.day.ua.gn.v20191016|esgf-data2.diasjp.net'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'ua_day_MIROC6_historical_r1i1p1f1_gn_18500101-18501231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18500101-18501231.nc' 'SHA256' 'cef5012954a62e2bc04c66c34f7dd700773f6d02b78dcd7abfa92485fc46f6f5'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18510101-18511231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18510101-18511231.nc' 'SHA256' '80b3b0e5e6c2e488e08e8da388de4873adac453c29003a240c709b5916e0eb95'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18520101-18521231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18520101-18521231.nc' 'SHA256' 'f15970ed09699e59773caf631809cbdca98468123d8fba5b518a023484bb0fa9'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18530101-18531231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18530101-18531231.nc' 'SHA256' '2619eb54a459bdd3807ad88eea5d5d619edf03846764f578d3e6874e5cbdd74b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18540101-18541231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18540101-18541231.nc' 'SHA256' 'fe8663efd1a25b81ccd70054b7d69517a6e2cd75db9d5d908ee82519b4c2f48b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18550101-18551231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18550101-18551231.nc' 'SHA256' '93f2cfe94aca9ca54155511af846be597001a91199c2040ab83f5693fee9cf52'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18560101-18561231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18560101-18561231.nc' 'SHA256' '89ba1b239cab21c0de46c6ca722398da63712b7b8ca94b7e7a34e71e9711a11a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18570101-18571231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18570101-18571231.nc' 'SHA256' '8c34c237a9cca156868a283d250e32f8f9c6a33001dbb9a6a2082bfdb2dda774'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18580101-18581231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18580101-18581231.nc' 'SHA256' '276c6373a47d68ba39ec023c06e43b0868f60fc14434dd27b245b3c2af303d45'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18590101-18591231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18590101-18591231.nc' 'SHA256' '70ddce789b49fd92c8dde95c33fb8b396808f7f4399f3ce4ccc900d3546c21a3'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18600101-18601231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18600101-18601231.nc' 'SHA256' '8fc700565ffb6a8eccdd09007bce43d8dae39130a8010db12ffd2568b1e5bd2a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18610101-18611231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18610101-18611231.nc' 'SHA256' 'f926a40723464a0c6f8d1c28c1a8f1d2856e2815983f1c2aeb8351d435baffaf'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18620101-18621231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18620101-18621231.nc' 'SHA256' '2531cc21adeb8360a9c0b832b51693c85cad55295477b54f922d841c0c80dae9'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18630101-18631231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18630101-18631231.nc' 'SHA256' '9bb117dd48e1ec627f07a43486564bdd8f1d3bbc69741ad389a391ccabd08a2e'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18640101-18641231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18640101-18641231.nc' 'SHA256' '65be3bbe030a33e242b925288d0bc4ecc71ff54911e81db064261c9dbf88698a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18650101-18651231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18650101-18651231.nc' 'SHA256' '0c5af7178802c9efe523710abc6049b8cf35e59583044d596dea1b0fb2fd8a8b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18660101-18661231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18660101-18661231.nc' 'SHA256' 'baacc606b86f71b332ab5ecf942bc5abaae5c9b8168f45081f7acbfb3090c4b8'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18670101-18671231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18670101-18671231.nc' 'SHA256' '3fc3390deee8e7666e22d39dec278d1781c7a613725b0d8e95d6c5cdbc3b27af'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18680101-18681231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18680101-18681231.nc' 'SHA256' '7b6a2cdb8f85cdb55db1b8a8d96d8c254d0f7fdf00c63e724d4c1bbe8a084ac8'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18690101-18691231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18690101-18691231.nc' 'SHA256' '3c6d325f18a903d0a3577092b1658c0b5d91d8f061852f9ea4cf9f5421d7d1aa'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18700101-18701231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18700101-18701231.nc' 'SHA256' 'ede9e5a5610954901c94d9d23d94bdbc0ca649d2ef6974e230eb026005780da1'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18710101-18711231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18710101-18711231.nc' 'SHA256' '98d6e852c782d13a855e3289fb7ae40b8dc07a0ad08db6fd5b24a1e6dc682c67'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18720101-18721231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18720101-18721231.nc' 'SHA256' 'e88dea125bc5a9927c3ec2917325f1bcf0e0c2f6c50bc85603cf23bafb5c96ec'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18730101-18731231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18730101-18731231.nc' 'SHA256' 'd4dbe9755b1565988cd49a4526da4506ae6637222f649c0da5524e7def5ea9c5'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18740101-18741231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18740101-18741231.nc' 'SHA256' '440d7180ae6bf2a7d44460384593d43fb27724057606a0d5bc612fb6f8082343'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18750101-18751231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18750101-18751231.nc' 'SHA256' '6fe85eae321a1bb6356898570e12878d01e9c23ef411dc79a253c2cd6bdaf285'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18760101-18761231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18760101-18761231.nc' 'SHA256' '1d558a4402d3ef00434d9a95170b2a867dcaf6d3851103706655b1de9777fb4a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18770101-18771231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18770101-18771231.nc' 'SHA256' '50b6e6b856eb4d1ab9d848acea98f606a873fd7eaf12731c81cc2a843c555fba'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18780101-18781231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18780101-18781231.nc' 'SHA256' 'bbcdb8ebe580d3cd1eeadf0fdc68c7bc254cada120e6f0d2f6f6fcee972ae359'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18790101-18791231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18790101-18791231.nc' 'SHA256' 'f5c32972027e9300a4b7197b47fc4ed4a0d52311a0f3a0e5311774e77233a9f8'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18800101-18801231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18800101-18801231.nc' 'SHA256' '0701541c486a422615f255d54c5e50a9665bcb0d1dcaff9d394d2751ebc8c13b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18810101-18811231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18810101-18811231.nc' 'SHA256' '6af1d832f08ca24afbd14c2139db8d442a16ec81118d414d93df04b0c07700ff'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18820101-18821231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18820101-18821231.nc' 'SHA256' 'eb205c4d27a12474979a2fa03a932ad8f65d23daf4ad047bfbad275b3e4e804c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18830101-18831231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18830101-18831231.nc' 'SHA256' 'f54358191d33a327adcef0cea10bf99d972acc14fa029d2d7c037d5a40b14394'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18840101-18841231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18840101-18841231.nc' 'SHA256' '4b478c0624c5a913968a2fdc6a5315d74221b875aaea20c2d9f4490071971311'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18850101-18851231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18850101-18851231.nc' 'SHA256' 'dc52c067ebf9212bbb5fb940bf164cf662a888b6d1ac2dac9334befcd9ad51f4'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18860101-18861231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18860101-18861231.nc' 'SHA256' 'c3a44b437af88c06a91e485d683d41dca7fbf9549904485500ac3ecb062c713b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18870101-18871231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18870101-18871231.nc' 'SHA256' '2a6ef53df3c63383e07867ad8c5b2284ea835b40b0b6853af508774074043e55'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18880101-18881231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18880101-18881231.nc' 'SHA256' 'f092f460adac1e15536c8c85f09bb0ab6864b6c245c7e7e7ce3efc24c6f016a8'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18890101-18891231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18890101-18891231.nc' 'SHA256' '4be81527d470b7c935b7fcb0670f3bf428ad318afd55fa737fec37a8ceecd9db'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18900101-18901231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18900101-18901231.nc' 'SHA256' 'bd7eb42861e9929734368ebba45e3b8a20d64de3979c29af3aa48540ef4997d0'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18910101-18911231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18910101-18911231.nc' 'SHA256' '31e9b7694e243f035f5abeb5ed8526acca31b60e5e73fe245e99c4060dd6a72e'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18920101-18921231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18920101-18921231.nc' 'SHA256' 'b082430dfae50abc9c4e91e645009d22d9de375bc48849aeae57da6e04b8ce2f'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18930101-18931231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18930101-18931231.nc' 'SHA256' '3ad25bb85605c61955bd2cb2115b2a4a2336f10270f945fd11905656f900514b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18940101-18941231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18940101-18941231.nc' 'SHA256' '682a615c957cf53f9ccd47d33a249cf00cfcbc3047b9c3f6d361f5f157e3e81c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18950101-18951231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18950101-18951231.nc' 'SHA256' '36f8c91152751fe3cece0d9cc16846bbfb9a177c7e31a8e466056da4058d0589'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18960101-18961231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18960101-18961231.nc' 'SHA256' '1c1338a4dc475133337b895c57d96f8552fee0c4e1577ac8f97da80d3e850c31'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18970101-18971231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18970101-18971231.nc' 'SHA256' 'e6cbd3f1cabe689dca6bfc1f151aa48377f5d5d9b40d9c3f914977b51fae5ec6'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18980101-18981231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18980101-18981231.nc' 'SHA256' 'f8819a4ab428813bc90d836d000312c4bdd1056cc61dafba46c6b6db56cf3b43'
'ua_day_MIROC6_historical_r1i1p1f1_gn_18990101-18991231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_18990101-18991231.nc' 'SHA256' 'a4940fbbd904e21eb512dc1fc3fee43f739649db274cffdb477b7d92a3a2ea58'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19000101-19001231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19000101-19001231.nc' 'SHA256' 'd98f6049bc734ba1ed23a5c2315236c786a1bea0532a8e3e4f2ea10b4ef75576'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19010101-19011231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19010101-19011231.nc' 'SHA256' 'dad4a6b5f9610a4a79906a2a9224f4880f6e694e94bd9275b070c66956651628'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19020101-19021231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19020101-19021231.nc' 'SHA256' '10320fda7448b9b7412e96cf1a44e0863d346d0d271826a793502d2f6fdd3648'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19030101-19031231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19030101-19031231.nc' 'SHA256' 'c7d0a78d30617222de322f3ad177286ea47c34e48861754f93cbbdd281c525c3'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19040101-19041231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19040101-19041231.nc' 'SHA256' '0e95922be8f196e95d46154bab42534a93519af0f5d85f4f1ec2c4790046ec1b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19050101-19051231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19050101-19051231.nc' 'SHA256' 'db46b37115057d4e948eb63edec2ddca482f815f5b0bf7dec96c735acec96e84'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19060101-19061231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19060101-19061231.nc' 'SHA256' '7b8a30e8c8a0ec937a408b56a4cae1c7529bd4211625e1c4c6b46a18cf549b56'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19070101-19071231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19070101-19071231.nc' 'SHA256' 'c6c494512df6bfda1341837187a0c637a34a51f18352b78d87b7d32c37255f0b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19080101-19081231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19080101-19081231.nc' 'SHA256' 'f5ce35263082b9b6b14d7fdbaa4c0ab350b2f1c72e18f2989131eeb4652ed892'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19090101-19091231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19090101-19091231.nc' 'SHA256' '63de910ae6bd081abf74a367e1626919cb87ba050d87d6afce4ea22156ce0621'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19100101-19101231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19100101-19101231.nc' 'SHA256' '5aa9201967c5e6ac20cc3e66044f1f8f8ac699d395d869fa2e244769f0a841a1'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19110101-19111231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19110101-19111231.nc' 'SHA256' '431a5f7af5a4da6450b98ee96dc2698c0b2c68af8952ccebd75a69138937b77c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19120101-19121231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19120101-19121231.nc' 'SHA256' 'c06010bdf9cdf47ba7ec30484e6adbce09c5c4468c09e5c2ea22ce903143db9d'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19130101-19131231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19130101-19131231.nc' 'SHA256' 'cd5ece3748ab7d6ddddc7afef3ab93c1f1b5528acf1e4749b3c984d5db8369d3'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19140101-19141231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19140101-19141231.nc' 'SHA256' 'bdeb701198fa806623a8946b90eb7503108f84e9c80df08ca318fb2529a03006'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19150101-19151231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19150101-19151231.nc' 'SHA256' '677e01bb2279c0632449273a99ae0430ad96f3827045f6e0ddacb9b3f61f70c0'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19160101-19161231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19160101-19161231.nc' 'SHA256' '81fe27f2e2d5d059b39d9fb37dbfcecb322d481b327ece487439f5d35307d306'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19170101-19171231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19170101-19171231.nc' 'SHA256' 'd66a2b5359e09a21e8302b81ddfa92f21fa2fcc6b695354af089f96cef641e9d'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19180101-19181231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19180101-19181231.nc' 'SHA256' '54a639eb75e2d0c7ae2be9df702f35fbd2b38e6038e7e2e1450ce048c1261723'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19190101-19191231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19190101-19191231.nc' 'SHA256' '49c38eb71b4c7058f68b83c1c32b243b74acbafbb73902c90c2ee2c5069e2af1'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19200101-19201231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19200101-19201231.nc' 'SHA256' 'd5a9ed547ff46fced14edab7700d1e4ea56b426c2fc32042d8260de592a8c007'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19210101-19211231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19210101-19211231.nc' 'SHA256' 'ef92472a1115c3ab7d652f0f3b4b82305729f3e2c3f27d4fc216499c9e5196fc'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19220101-19221231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19220101-19221231.nc' 'SHA256' 'a575649a998e236fd1a361a34fdfea7fb4c3907bafe39058033fd9ebba5eee25'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19230101-19231231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19230101-19231231.nc' 'SHA256' 'e82d436988639aaf5fa2a28b1383d3c104a1a05afc017b729cdb0d5918403b95'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19240101-19241231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19240101-19241231.nc' 'SHA256' '08582f1d60316af83e44ef2f9d02bcf759a018c3bed75273480388cc66c583b2'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19250101-19251231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19250101-19251231.nc' 'SHA256' 'c31a2ed7bb5acc5b03aec73f1126f3de65c9873db3e2018885a4c812ab2f9dca'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19260101-19261231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19260101-19261231.nc' 'SHA256' 'c96179015251e41efe52fe7ac25a8889eec70ac8d3604e9ceffdb2058bb4e5b6'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19270101-19271231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19270101-19271231.nc' 'SHA256' 'cebd0d6090fabaf6814e7f345787d0132530a8bc40b8e6fe42203b5eca8c45f5'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19280101-19281231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19280101-19281231.nc' 'SHA256' '5fb7fd4a6e11dded2e35e0128c12eaea0de0e7dcf4e8c470a167ae9627ebef0d'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19290101-19291231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19290101-19291231.nc' 'SHA256' 'b20a48a021b9a135026d3bffc46bfb2d398ead98e7e603069a5d72eefdcce32e'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19300101-19301231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19300101-19301231.nc' 'SHA256' '1bbc471bc5f1483acdd26ca4b9d7e98a569934020ad98c685cd7e873d473b1b3'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19310101-19311231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19310101-19311231.nc' 'SHA256' 'e3854b2cbc4750f672b5567757ac9657af9ad2bec42c53e147b573ba8bfe9dfe'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19320101-19321231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19320101-19321231.nc' 'SHA256' '9f1c1226878af00a031e0477bf9ad857db5e5c45f8b24092ec1f7d4594aa7e2a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19330101-19331231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19330101-19331231.nc' 'SHA256' '22697db6530cd5f8c7e857ee1260d78e09dfa15778ab337f3e27db41291b6404'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19340101-19341231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19340101-19341231.nc' 'SHA256' '799f8e78d01913040e235bc85c80d2abd9c8c8966efa499123255e2ffe2a43a2'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19350101-19351231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19350101-19351231.nc' 'SHA256' 'e6506e3e2fb4229c94a923f583e67b60a012d24fff38182ce138322ce2d469de'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19360101-19361231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19360101-19361231.nc' 'SHA256' '61541cf08a190a7534926d64534f3fc95d5056071914f258aeb5c9a76a692c1f'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19370101-19371231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19370101-19371231.nc' 'SHA256' 'f78ad1ca979bb764f3d593f415e8563ee90b6d6bf7c499be4331d76f1c1ef8f8'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19380101-19381231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19380101-19381231.nc' 'SHA256' 'ca937c7085de40f9ce6642b5d7766180e28c6dec84fe0fdec968a53922e712cf'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19390101-19391231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19390101-19391231.nc' 'SHA256' 'c76e771cbc6a63334823b525822f28688ada21b479252233bdfc0cf557ce6fb9'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19400101-19401231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19400101-19401231.nc' 'SHA256' 'd6ac7bae2897c1a5c19f8c8c707c96c9c5fa7350203b69a5b5da3db59f5233d6'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19410101-19411231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19410101-19411231.nc' 'SHA256' 'a58ed61b89a83d7a1680cb6fcf5e2f6d846467f5223793d0ddda22fa9c837bdc'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19420101-19421231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19420101-19421231.nc' 'SHA256' 'e76589258355c0276df1621552c856e950c4baffea63f551995b45e917388f98'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19430101-19431231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19430101-19431231.nc' 'SHA256' 'e0d0a737860bb3da679ec4d4e48fc5426de750b32f5f6dd0fe4f442494bca5b5'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19440101-19441231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19440101-19441231.nc' 'SHA256' '9bc545dae62920fac8e5b0efa975f3435efc04ff2c68fd504f2909d31cf28afe'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19450101-19451231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19450101-19451231.nc' 'SHA256' '6e6ee160c960cc4f13ac7de5a065499b83da91b89e45c60c203e6b1e232ab294'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19460101-19461231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19460101-19461231.nc' 'SHA256' '42aff478116e8a1b96db544f1790d182764032b6cea61f6d22bf0a5d4a0e71ea'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19470101-19471231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19470101-19471231.nc' 'SHA256' 'd47a6660f693794c3b5c09795d6baafacb66c7849ebbb9f3f4e3627631bf240e'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19480101-19481231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19480101-19481231.nc' 'SHA256' 'ab59d7b37762da98a5e7c1ad8d283ba017a81a6abcbfa982e1ef5401d514f4fc'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19490101-19491231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19490101-19491231.nc' 'SHA256' '34d5738b59edbde439cace9f2ea4005ed5b1e846bea316aba3c3d5ab4f2c6041'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19500101-19501231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19500101-19501231.nc' 'SHA256' '0e0aee11afc07df02070ad4fd4a273f5b0dbaf1ec14bc71602ee086e71df747c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19510101-19511231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19510101-19511231.nc' 'SHA256' '24027582da155bab9f051f8a050e567bf2ca5e5afcf55af9f9beac86ae3c397d'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19520101-19521231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19520101-19521231.nc' 'SHA256' '75d57a6bdd807503cedeb7e8587af4ed1c3ddd58260feafc38f80679a9142494'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19530101-19531231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19530101-19531231.nc' 'SHA256' 'a2d96bb1abb7a18b5a80a48ae8327434606242e02f9d30dfc71d42cfd0075cd9'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19540101-19541231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19540101-19541231.nc' 'SHA256' '97175ca4056021e9f2b2ee71f37b7a2a2aea1410c489623e9692a5b0b468dd0a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19550101-19551231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19550101-19551231.nc' 'SHA256' '73a6acbba56c6d1996e8ddd85b35e0dac5d84b3bb43f65df269331cec8bfb881'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19560101-19561231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19560101-19561231.nc' 'SHA256' '582cf2bc7b9ff80ff8a6ff6636a667969c504c9e976356ffd9db2494dbfc4b7c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19570101-19571231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19570101-19571231.nc' 'SHA256' '80959d675b15a0b0748306023cb048c741e2cf8e82b3596bfc854b5610b4e1d2'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19580101-19581231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19580101-19581231.nc' 'SHA256' 'd7688155a34b5190801762db29e664a4c47ee31d202b3bcef7c643258c597adc'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19590101-19591231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19590101-19591231.nc' 'SHA256' '4329af067780c4108482d48670b2e8831fdba4c3328326b062e1a198f9618aef'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19600101-19601231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19600101-19601231.nc' 'SHA256' '027445966ced88b4ecc136326fd7c6425b35be99d33fd759868ca5c4620bcdfd'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19610101-19611231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19610101-19611231.nc' 'SHA256' 'd7069ad106c67d4efd6413dec9b4dc5b9095e12d898640811ca34226ec618efb'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19620101-19621231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19620101-19621231.nc' 'SHA256' '8939382ab754255cb75dbaace1206390044753014ae4a2f060a98576392527c8'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19630101-19631231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19630101-19631231.nc' 'SHA256' '77da32169a4918e26e2ecb07bc2483328bf4df76404a7d741bdc0caa27a817ea'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19640101-19641231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19640101-19641231.nc' 'SHA256' '186e93d7e115932aa6d4f6adcc634f9598814836af58a693b23c03c0c3b82db0'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19650101-19651231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19650101-19651231.nc' 'SHA256' '03bfdaa06d9e747285c7a3bd1be52cc787ebef7f3e5241cc0c69ccd13e370762'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19660101-19661231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19660101-19661231.nc' 'SHA256' 'ba966726e100cd97a9ae4c71be2713470cf0086969bf04c7a4b89a5523b560d4'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19670101-19671231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19670101-19671231.nc' 'SHA256' '881823eea550a5aadb996b25b79877b2fcc3cb2bb01341953fff5f88624d4945'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19680101-19681231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19680101-19681231.nc' 'SHA256' 'df5bf2d14a7684dbbe277e880fa6d95666127fdda8739f1351789baa8e4f6e1a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19690101-19691231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19690101-19691231.nc' 'SHA256' '0a92119f9a51915b753f8598edd7bcb28faa26b09e93de5167f42af5e16ea1e5'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19700101-19701231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19700101-19701231.nc' 'SHA256' '15d7c6ba8b4617cd025b2ea4108d332543fc6d78331779f5eb54c3a82635cd53'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19710101-19711231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19710101-19711231.nc' 'SHA256' '5c4c0006a5a2c2021214eadca5ad58b256d9a0a0a0263f49802340047724146c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19720101-19721231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19720101-19721231.nc' 'SHA256' 'cff097228e2076e447eaea893171ab60d6b49ce43d80c79f8be0913a9077989b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19730101-19731231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19730101-19731231.nc' 'SHA256' '31dccfc233add97a23c622feafebbb212d2aecf50b0857ab93b6b97a956af775'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19740101-19741231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19740101-19741231.nc' 'SHA256' '8f7ce66e9bc5fb3b634ad6f2687fb5edd0a41789c1ee13f759d168417db02095'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19750101-19751231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19750101-19751231.nc' 'SHA256' '60bc346d5beb9155f6e02f489878b43f2b1a0ce83d201979ccf188a1350dc2bf'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19760101-19761231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19760101-19761231.nc' 'SHA256' '6b56fc41f6636657f24a69e25b7140d51d326ca07e60a6c3cfc5e954b837db5a'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19770101-19771231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19770101-19771231.nc' 'SHA256' 'e5cebf90c1739b5f357ec2d9caf2f1a3f26fdff6af2cc97467e812b42a359717'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19780101-19781231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19780101-19781231.nc' 'SHA256' '6a203598f0f4cba6f17c02d92500cfbd6bd9e0c8ed3748e40c69438bf6aab35f'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19790101-19791231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19790101-19791231.nc' 'SHA256' '2b5b54d5939824e69aff6e0e27619450155af7e98f669258becfbdf7678d0996'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19800101-19801231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19800101-19801231.nc' 'SHA256' 'cfb4917e3b8abefe48e1589bf727e8a7504f32b237c08ea623ef68fd34468e1c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19810101-19811231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19810101-19811231.nc' 'SHA256' '8f692e2a8a7fbf14e61d911469ccefc437a14b6a84e43e66f1c49a7e4149fc9c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19820101-19821231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19820101-19821231.nc' 'SHA256' 'b73f55f6219e1bc6e19e70485760fda0a6a73d1ada29471c9a6188a8efce262d'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19830101-19831231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19830101-19831231.nc' 'SHA256' '67f2e56a689bcbe5db0bc1dd9ad67585b4aa09cf3c68bc8127ac0bbddff0be39'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19840101-19841231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19840101-19841231.nc' 'SHA256' 'b461abe36d23a4e78ca918bca450ae8bfb0fd88fcdee94373066b5f166f32bcd'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19850101-19851231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19850101-19851231.nc' 'SHA256' '725a68cd3f688b72af09a0cddc7bdaf1acc891e5a07044a095ec9a216d8d75b9'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19860101-19861231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19860101-19861231.nc' 'SHA256' '70b52ca10f385d618fd5b98160636033dd104ff0af7b2027f99338bc05e69bd1'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19870101-19871231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19870101-19871231.nc' 'SHA256' 'b483cf8bf98b29b87be4276821b0aa96013dd9b70d14415d9d5a1d7151d1f75e'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19880101-19881231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19880101-19881231.nc' 'SHA256' '1442ad466ecb521fdf482c0fecc88fd6fd365b833ea43671d594192a390ecc3b'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19890101-19891231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19890101-19891231.nc' 'SHA256' '16a2690be568c1bba9dbf5a4cead02b35097537876ba13b03d2c50d45a6f6c64'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19900101-19901231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19900101-19901231.nc' 'SHA256' '673d04ad14c588aadab2b6c0f241ee412275f49ee7cd72cc7bf9845b9fc846be'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19910101-19911231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19910101-19911231.nc' 'SHA256' 'e5040af6b10e6ae3e7ad5207025e4a7b75a939acb852c1d867ba0edf9cdbccd4'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19920101-19921231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19920101-19921231.nc' 'SHA256' '87f5241e148da16b21c24bf4a1bd2a8d6606d9ed74790d56a0e814c4675167a1'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19930101-19931231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19930101-19931231.nc' 'SHA256' 'b4be1759968a81593ea58ac8b37ed335a83eeba2545e1bbed6c6b79b4e563f0c'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19940101-19941231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19940101-19941231.nc' 'SHA256' '9213b66de0c237dd48e9881e85ae3395df8d754c9cd32a48787eafe2d02c926e'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19950101-19951231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19950101-19951231.nc' 'SHA256' 'ce854cecd4d5781ae25f287a184f4ee02aff2be6858d23fa7dc4fed40cb8adee'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19960101-19961231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19960101-19961231.nc' 'SHA256' '9c319f6f5656a953d5056c0c7322c67c38f97bddc995408e122da217fa6de643'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19970101-19971231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19970101-19971231.nc' 'SHA256' 'de9f1515bb2362889606f1513328646083b99530e3fab2ce903f3b2d0c85ebbd'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19980101-19981231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19980101-19981231.nc' 'SHA256' '1199bd59c7eca0be09fe9c1ebc74446a9379b3321a2071be21e4e5a658afd331'
'ua_day_MIROC6_historical_r1i1p1f1_gn_19990101-19991231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_19990101-19991231.nc' 'SHA256' 'f1ab6f5ac5a8cce2f3e3f1e2996553a5de0db0022acf8dff024029ca137245d5'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20000101-20001231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20000101-20001231.nc' 'SHA256' '19d387c294e794c98547583f39259da53a1ab3610866dced1f93a0fb4e695138'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20010101-20011231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20010101-20011231.nc' 'SHA256' '0692d16f17b877c470a987033539643dc1bcdd18b2f158314bc073205d6ba767'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20020101-20021231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20020101-20021231.nc' 'SHA256' 'f3e35f55bac201fd620ea09d20e96b86b3d6c2c7eeab4a20dcb32a6554d94bbe'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20030101-20031231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20030101-20031231.nc' 'SHA256' '6f2c6eff898f685088fca30a76c849f95db60900a43e8bc38b892b8bb026c171'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20040101-20041231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20040101-20041231.nc' 'SHA256' 'c14771cbc336cc89fb04727dba46a855f84dc933b87925e9d0303f71eaef8829'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20050101-20051231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20050101-20051231.nc' 'SHA256' '5e4cc5df5f04198531ccefac34ed628cc70fbc51e08f0141f96640585e090177'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20060101-20061231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20060101-20061231.nc' 'SHA256' 'fe86f19278653672ebd7d9a7106332349c5052af2d739a178480c4687de77083'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20070101-20071231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20070101-20071231.nc' 'SHA256' '5456daace2b4d688b0dc9e4fa263ff154b20092b434441e30e5200044e7bb348'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20080101-20081231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20080101-20081231.nc' 'SHA256' '6ee4f068241235bc9af347777a3457b125123937c42df619c303a1791219acc4'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20090101-20091231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20090101-20091231.nc' 'SHA256' 'af22fdbc57a651feef45f960092ffbbfa9db334a2f69a83ee797df033d055cac'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20100101-20101231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20100101-20101231.nc' 'SHA256' '58134d8a6312d5ef2e69035e38616920bf4c8ce36c59b5806ea4686649c139db'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20110101-20111231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20110101-20111231.nc' 'SHA256' 'a8204997d92be200eba64eae3e0e14180d30b5352e7355a135d4ab1bc8ce9388'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20120101-20121231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20120101-20121231.nc' 'SHA256' '590433eeca43584e2fe30a61329a69debb6e990b1013d8a3fa46129667c91a6d'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20130101-20131231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20130101-20131231.nc' 'SHA256' 'd61cd54ec581b777a0e33cb926793b49d6142d040c093bcd6b4bf0143677e75d'
'ua_day_MIROC6_historical_r1i1p1f1_gn_20140101-20141231.nc' 'http://esgf-data2.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC6/historical/r1i1p1f1/day/ua/gn/v20191016/ua_day_MIROC6_historical_r1i1p1f1_gn_20140101-20141231.nc' 'SHA256' 'a5651ef7715537c278518d9b038ee2b264396ab8e68629f93b457c4ffe360642'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 165 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
